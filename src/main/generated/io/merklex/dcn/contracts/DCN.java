package io.merklex.dcn.contracts;

import org.web3j.abi.*;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.*;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameterName;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.tx.Contract;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.utils.Numeric;

@javax.annotation.Generated(value="merklex-code-gen")
public class DCN {
    public static final String BINARY = "608060405234801561001057600080fd5b503360005533600155613535806100286000396000f3fe608060405234801561001057600080fd5b50600436106102785760003560e060020a90048063972bbb9511610155578063c9de7c08116100c7578063d87b66591161008b578063d87b665914610dd8578063ec3b84f014610e16578063f03f1e0014610ebc578063f0b97ebe14610f09578063f20d139814610f51578063f54f3fcf14610f8a57610278565b8063c9de7c0814610cde578063cb8dbe6a14610d01578063cd34732914610d46578063d265ef4814610d6c578063d529cbf614610da557610278565b8063a7e5144211610119578063a7e5144214610b02578063a88d190214610ba8578063ace1ed0714610bb0578063ad96f04b14610be3578063b1827b5014610beb578063b6fc686014610cb357610278565b8063972bbb9514610930578063a0b4244b1461099a578063a1c4d569146109df578063a2157ef414610a05578063a68c68b414610a2c57610278565b806332d184b7116101ee57806344360c07116101b257806344360c0714610701578063541694cf1461072857806359adf41f146107f35780636822e38b146107fb5780637c73473614610840578063828b51e1146108fe57610278565b806332d184b71461055b57806336384331146105d25780633b9a59e8146106045780633dfecb6f146106aa578063431ec601146106e057610278565b8063136a9bf711610240578063136a9bf7146103f3578063204bc60c146104a45780632083eda0146104e9578063231254451461050657806326db91521461050e57806327be31521461053457610278565b8063054060bb1461027d5780630b6e74aa146102c45780630ee9117f146102fa57806310271c29146103175780631061462c146103bd575b600080fd5b6102c26004803603608081101561029357600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516610fb5565b005b6102c2600480360360408110156102da57600080fd5b50803567ffffffffffffffff169060200135600160a060020a0316611180565b6102c26004803603602081101561031057600080fd5b50356111b4565b6102c26004803603602081101561032d57600080fd5b81019060208101813564010000000081111561034857600080fd5b82018360208201111561035a57600080fd5b8035906020019184600183028401116401000000008311171561037c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506111ec945050505050565b6102c2600480360360408110156103d357600080fd5b50803567ffffffffffffffff169060200135600160a060020a03166116d6565b6102c26004803603604081101561040957600080fd5b81019060208101813564010000000081111561042457600080fd5b82018360208201111561043657600080fd5b8035906020019184600183028401116401000000008311171561045857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050509035600160a060020a031691506117269050565b6102c2600480360360808110156104ba57600080fd5b5067ffffffffffffffff8135169063ffffffff60208201358116916040810135821691606090910135166117cc565b6102c2600480360360208110156104ff57600080fd5b503561187e565b6102c26118a7565b6102c26004803603602081101561052457600080fd5b5035600160a060020a031661193a565b6102c26004803603602081101561054a57600080fd5b503567ffffffffffffffff16611955565b6105966004803603606081101561057157600080fd5b5067ffffffffffffffff8135169063ffffffff60208201358116916040013516611991565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff9283166020850152911682820152519081900360600190f35b6102c2600480360360408110156105e857600080fd5b50803563ffffffff169060200135600160a060020a0316611a10565b6102c26004803603602081101561061a57600080fd5b81019060208101813564010000000081111561063557600080fd5b82018360208201111561064757600080fd5b8035906020019184600183028401116401000000008311171561066957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a7c945050505050565b6102c2600480360360408110156106c057600080fd5b50803567ffffffffffffffff169060200135600160a060020a0316611d20565b6106e8611d54565b6040805163ffffffff9092168252519081900360200190f35b6102c26004803603602081101561071757600080fd5b503567ffffffffffffffff16611d68565b61074b6004803603602081101561073e57600080fd5b503563ffffffff16611dba565b60408051851515602080830191909152600160a060020a03808716938301939093528483166060830152918316608082015260a080825287519082015286519091829160c083019189019080838360005b838110156107b457818101518382015260200161079c565b50505050905090810190601f1680156107e15780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6102c2611e2e565b6102c26004803603608081101561081157600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516611e63565b6102c26004803603606081101561085657600080fd5b81019060208101813564010000000081111561087157600080fd5b82018360208201111561088357600080fd5b803590602001918460018302840111640100000000831117156108a557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050813567ffffffffffffffff1692505060200135600160a060020a0316611fea565b6102c26004803603604081101561091457600080fd5b50803563ffffffff169060200135600160a060020a03166120a2565b6109576004803603602081101561094657600080fd5b503567ffffffffffffffff166120f4565b60408051600160a060020a03978816815295871660208701528581019490945291851660608501528416608084015290921660a082015290519081900360c00190f35b6102c2600480360360808110156109b057600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516612156565b6102c2600480360360208110156109f557600080fd5b5035600160a060020a03166122a4565b6102c260048036036020811015610a1b57600080fd5b503567ffffffffffffffff166122bf565b610a4f60048036036020811015610a4257600080fd5b503563ffffffff166122fe565b60405180806020018567ffffffffffffffff1667ffffffffffffffff16815260200184600160a060020a0316600160a060020a03168152602001838152602001828103825286818151815260200191508051906020019080838360005b83811015610ac4578181015183820152602001610aac565b50505050905090810190601f168015610af15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6102c260048036036020811015610b1857600080fd5b810190602081018135640100000000811115610b3357600080fd5b820183602082011115610b4557600080fd5b80359060200191846001830284011164010000000083111715610b6757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612366945050505050565b6106e86124bb565b610bb86124cf565b60408051600160a060020a039485168152928416602084015292168183015290519081900360600190f35b6102c26124f6565b610c3060048036036080811015610c0157600080fd5b5067ffffffffffffffff8135169063ffffffff602082013581169160408101358216916060909101351661251c565b6040805160079c8d0b8d0b81529a8c0b8c0b60208c015267ffffffffffffffff998a168b82015297891660608b0152958a0b8a0b60808a015293890b90980b60a088015290851660c0870152841660e086015294909216610100840152600b93840b840b61012084015290830b90920b6101408201529051908190036101600190f35b6102c260048036036040811015610cc957600080fd5b5063ffffffff81351690602001351515612735565b6102c260048036036020811015610cf457600080fd5b503563ffffffff1661278e565b610d3460048036036040811015610d1757600080fd5b50803567ffffffffffffffff16906020013563ffffffff166127e6565b60408051918252519081900360200190f35b610d4e612812565b60408051938452602084019290925282820152519081900360600190f35b6102c260048036036060811015610d8257600080fd5b5067ffffffffffffffff8135169063ffffffff6020820135169060400135612839565b610d3460048036036040811015610dbb57600080fd5b50803567ffffffffffffffff16906020013563ffffffff16612947565b6102c260048036036060811015610dee57600080fd5b50803563ffffffff908116916020810135909116906040013567ffffffffffffffff1661297f565b6102c260048036036020811015610e2c57600080fd5b810190602081018135640100000000811115610e4757600080fd5b820183602082011115610e5957600080fd5b80359060200191846001830284011164010000000083111715610e7b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612a98945050505050565b6102c260048036036080811015610ed257600080fd5b50803563ffffffff908116916020810135909116906040810135600160a060020a0316906060013567ffffffffffffffff166130b2565b6102c260048036036080811015610f1f57600080fd5b5067ffffffffffffffff8135169063ffffffff60208201351690600160a060020a0360408201351690606001356131c5565b6102c260048036036060811015610f6757600080fd5b5067ffffffffffffffff8135169063ffffffff60208201351690604001356132d6565b610d3460048036036040811015610fa057600080fd5b5063ffffffff813581169160200135166133a2565b610fbd6133d3565b610fc56133f2565b610fcd613411565b6006546020811615610fe45760006020526001603ffd5b50600454808710610ffa5760016020526001603ffd5b506005548086106110105760026020526001603ffd5b5083151561101a57005b6c030000000100000002000000068702640100000003870201850164010000001001805467ffffffffffffffff80821687019081111561105f5760036020526001603ffd5b87600202740300000001000000020000000600000000000000090154600160a060020a03811667ffffffffffffffff60a060020a830416808a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000875af18015156110eb5760046020526001603ffd5b89518015156110ff5760056020526001603ffd5b50508a6fffffffffffffffffffffffffffffffff608060020a8804160185608060020a820217876fffffffffffffffff0000000000000000161788558e89528d60208a01528c60408a01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608aa1505050505050505050505050505050565b816c0300000001000000020000000602600901600481015480331415156111ac5760016020526001603ffd5b506005015550565b6000543381146111c95760016020526001603ffd5b506007548181188219811680156111e4576202a30042016008555b505050600755565b6111f4613430565b60065461010081161561120c5760006020526001603ffd5b508151602083018181018151600483019250818311156112315760016020526001603ffd5b60045460e060020a820463ffffffff16908082106112545760026020526001603ffd5b506000805160206134ea833981519152640100000003820201805433600160a060020a0382161461128a5760036020526001603ffd5b50505b828410156116cd578351600985019450838511156112b05760046020526001603ffd5b63ffffffff60e060020a82041663ffffffff60c060020a830416602060ff770100000000000000000000000000000000000000000000008504160287016005548083108185101615156113085760056020526001603ffd5b508681111561131c5760066020526001603ffd5b60008086640100000003026000805160206134ea8339815191520185600382010180545b858d10156116ab578c5167ffffffffffffffff60c060020a8204166c03000000010000000200000006026009018b6401000000030264010000000682010189602060020a8c020160030264010000000182010167ffffffffffffffff608060020a8504166780000000000000008116156113c05767ffffffffffffffff19175b67ffffffffffffffff604060020a8604166780000000000000008116156113ed5767ffffffffffffffff19175b818b019a50808a01995067ffffffffffffffff86168088019750835467ffffffffffffffff60c060020a8204166780000000000000008116156114365767ffffffffffffffff19175b67ffffffffffffffff608060020a8304166780000000000000008116156114635767ffffffffffffffff19175b85820191508481019050677fffffffffffffff8113677fffffffffffffff19821217677fffffffffffffff8313677fffffffffffffff1984121717156114ae5760076020526001603ffd5b8367ffffffffffffffff604060020a8504160167ffffffffffffffff8416808211156114df5760086020526001603ffd5b80604060020a8302608060020a850260c060020a87021717179450600189015467ffffffffffffffff60c060020a82041667800000000000000081161561152c5767ffffffffffffffff19175b67ffffffffffffffff608060020a8304166780000000000000008116156115595767ffffffffffffffff19175b80861282881217156115705760096020526001603ffd5b5050600260018512026001861201806003811461159c57600181146115b457600281146115eb57611618565b858717156115af57600a6020526001603ffd5b611618565b856305f5e10088600003020467ffffffffffffffff604060020a850416808211156115e457600b6020526001603ffd5b5050611618565b856000036305f5e10088020467ffffffffffffffff84168082101561161557600c6020526001603ffd5b50505b505050505050508f60018701018f60018801018154815467ffffffffffffffff8216888101905067ffffffffffffffff81111561165a57600d6020526001603ffd5b67ffffffffffffffff82811689019081111561167b57600e6020526001603ffd5b9590995567ffffffffffffffff1991821690981790925595161790935550505060209f909f019e50611340915050565b838517156116be57600f6020526001603ffd5b90555061128d95505050505050565b50505050505050565b816c0300000001000000020000000602600901600481015480331415156117025760016020526001603ffd5b82600183015560028201805480151561171e5742621291200182555b505050505050565b600654600281161561173d5760006020526001603ffd5b506000543381146117535760016020526001603ffd5b508151600b81146117695760026020526001603ffd5b600454604060020a81106117825760046020526001603ffd5b60209390930151821764010000000384026000805160206134ea8339815191528101919091557403000000010000000200000006000000020000000a019190915550600101600455565b6004548084106117e15760016020526001603ffd5b5060096c0300000001000000020000000685020180543381146118095760026020526001603ffd5b640100000003850282016401000000060180544281111561182f5760036020526001603ffd5b84602060020a870201600302640100000001830101600081556000600182015560028101805477ffffffffffffffffffffffffffffffffffffffffffffffff1916815550505050505050505050565b6000543381146118935760016020526001603ffd5b506006548181176006556000196007555050565b6118af61344f565b6006546110008116156118c75760006020526001603ffd5b50600354604060020a81106118e15760016020526001603ffd5b60018101600355806c03000000010000000200000006026009013360008201553360038201553360048201558183527f654a5f371dd267582fdba132709448f256a549360e2ce54ccb3699d3b8ed2394602084a1505050565b60015433811461194f5760016020526001603ffd5b50600255565b806c030000000100000002000000060260090160058101805480331415156119825760016020526001603ffd5b60009091556004919091015550565b600080600061199e613411565b866c0300000001000000020000000602600901866401000000030264010000000682010186600182010180546fffffffffffffffffffffffffffffffff608060020a820416855267ffffffffffffffff604060020a820416602086015267ffffffffffffffff81166040860152606085f35b600654610200811615611a285760006020526001603ffd5b5081640100000003026000805160206134ea8339815191520160018101543381141515611a5a5760016020526001603ffd5b50805473ffffffffffffffffffffffffffffffffffffffff1916909117905550565b6006546040811615611a935760006020526001603ffd5b50805160208201818101815160048301925081831115611ab85760016020526001603ffd5b60045460e060020a820463ffffffff1690808210611adb5760026020526001603ffd5b506000805160206134ea8339815191526401000000038202015433600160a060020a03821614611b105760036020526001603ffd5b506005545b838510156116cd57845160068601955084861115611b385760046020526001603ffd5b60e060020a810463ffffffff16828110611b575760056020526001603ffd5b60ff7b0100000000000000000000000000000000000000000000000000000083041615601060ff7a01000000000000000000000000000000000000000000000000000085041602880187811115611bb35760066020526001603ffd5b640100000003860283017403000000010000000200000006000000020000000c0180547403000000010000000200000006000000000000000960028602015460a060020a900467ffffffffffffffff165b838c1015611d13578b5167ffffffffffffffff60c060020a8204166c030000000100000002000000060260090167ffffffffffffffff608060020a83041660008960018e640100000003026401000000068601010101805467ffffffffffffffff811684810381811115611ca4578c15611c835760076020526001603ffd5b508085039350600089851115611c9e5760086020526001603ffd5b848a0399505b8886028e6006890101805482810180821115611cc55760096020526001603ffd5b8867ffffffffffffffff604060020a8904160185604060020a820217886fffffffffffffffffffffffffffffffff19161789558184555050505050505050505050505060108c019b50611c04565b50905550611b1592505050565b816c030000000100000002000000060260090160048101548033141515611d4c5760016020526001603ffd5b506003015550565b6000611d5e6133f2565b6004548152602081f35b806c0300000001000000020000000602600901600181016002820181548033141515611d995760016020526001603ffd5b42821115611dac5760026020526001603ffd5b600092839055919055905550565b6060600080600080611dca61346a565b86640100000003026000805160206134ea8339815191520180546001820154600283015460a08552600b60a08601528260c086015260ff60a060020a8404166020860152600160a060020a038316604086015281606086015280608086015260cc85f35b600054338114611e435760016020526001603ffd5b5060085442811115611e5a5760026020526001603ffd5b60075460065550565b611e6b6133d3565b811515611e7457005b6006546010811615611e8b5760006020526001603ffd5b50600454808510611ea15760016020526001603ffd5b50600554808410611eb75760026020526001603ffd5b5082600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808402876c030000000100000002000000060260090160038101548033141515611f145760036020526001603ffd5b50866006820101805483811015611f305760046020526001603ffd5b6401000000038a028301890164010000000701805467ffffffffffffffff8082168b0190811115611f665760056020526001603ffd5b8a6fffffffffffffffffffffffffffffffff608060020a84041601878503865581608060020a820217836fffffffffffffffff0000000000000000161784558e8b528d60208c01528c60408c01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608ca1505050505050505050505050505050565b60065460018116156120015760006020526001603ffd5b506000543381146120175760016020526001603ffd5b5060055464010000000081106120325760026020526001603ffd5b8351600481146120475760036020526001603ffd5b8315156120595760046020526001603ffd5b82151561206b5760056020526001603ffd5b506020939093015160a060020a92909202171774030000000100000002000000060000000000000009600283020155600101600555565b6006546104008116156120ba5760006020526001603ffd5b5081640100000003026000805160206134ea83398151915201600181015433811415156120ec5760016020526001603ffd5b506002015550565b600080600080600080612105613430565b876c03000000010000000200000006026009016000810154825260018101546020830152600281015460408301526003810154606083015260048101546080830152600581015460a083015260c082f35b61215e6133d3565b81151561216757005b60045480851061217c5760016020526001603ffd5b506005548084106121925760026020526001603ffd5b5060096c0300000001000000020000000686020180543381146121ba5760036020526001603ffd5b508464010000000302640100000006820101805480428111156121e25760046020526001603ffd5b5050846001820101805467ffffffffffffffff81168087111561220a5760056020526001603ffd5b86810367ffffffffffffffff604060020a840416808210156122315760066020526001603ffd5b818467ffffffffffffffff191617855589600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808b028c60068b010180548281018181101561228f5760076020526001603ffd5b90915550505050505050505050505050505050565b6001543381146122b95760016020526001603ffd5b50600055565b806c0300000001000000020000000602600901600481015480331415156122eb5760016020526001603ffd5b6000600183015560006002830155505050565b6060600080600061230d613430565b740300000001000000020000000600000000000000096002870201805460608084526080840182905260a060020a820467ffffffffffffffff166020850152600160a060020a038216604085015283018190528060a484f35b8051602082018181015b808210156124b557815163ffffffff60e060020a82041663ffffffff60c060020a83041663ffffffff60a060020a84041660088102600c018601858111156123bd5760016020526001603ffd5b640100000003840283017403000000010000000200000006000000020000000c018054805b838a10156124945767ffffffffffffffff60c060020a8b5104168660018964010000000302640100000006846c030000000100000002000000060260090101010101805467ffffffffffffffff811667ffffffffffffffff604060020a830416808281111561244e5750815b8015612483576fffffffffffffffffffffffffffffffff198416604060020a9282900392830293829003938417178555968701965b50505050505060088a0199506123e2565b818111156124a75760026020526001603ffd5b509055506123709350505050565b50505050565b60006124c56133f2565b6005548152602081f35b60008060006124dc613411565b600054815260015460208201526002546040820152606081f35b60025433153382141517156125105760016020526001603ffd5b33600155600060025550565b6000806000806000806000806000806000612535613489565b8c91508d92508f6c03000000010000000200000006026009018f6401000000030264010000000682010183602060020a86020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a8404166780000000000000008116156125ad5767ffffffffffffffff19175b8752608060020a830467ffffffffffffffff81169067800000000000000016156125dd5767ffffffffffffffff19175b8060208901525067ffffffffffffffff604060020a840416604088015267ffffffffffffffff8316606088015267ffffffffffffffff60c060020a8304166780000000000000008116156126375767ffffffffffffffff19175b6080880152608060020a820467ffffffffffffffff811690678000000000000000161561266a5767ffffffffffffffff19175b8060a08901525067ffffffffffffffff604060020a83041660c088015267ffffffffffffffff821660e088015267ffffffffffffffff60c060020a8204166101008801526bffffffffffffffffffffffff6c010000000000000000000000008204166b8000000000000000000000008116156126f0576bffffffffffffffffffffffff19175b6101208801526bffffffffffffffffffffffff81166b800000000000000000000000821615612729576bffffffffffffffffffffffff19175b61014088015261016087f35b60005433811461274a5760016020526001603ffd5b5081640100000003026000805160206134ea83398151915201805460a060020a83028174ff0000000000000000000000000000000000000000191617825550505050565b6006546108008116156127a65760006020526001603ffd5b5080640100000003026000805160206134ea83398151915201600281015433153382141517156127db5760016020526001603ffd5b336001830155505050565b60006127f06133f2565b836c030000000100000002000000060260090183600682010180548352602083f35b600080600061281f613411565b600654815260075460208201526008546040820152606081f35b6128416133d3565b6128496133f2565b60065460088116156128605760006020526001603ffd5b506005548085106128765760016020526001603ffd5b5082151561288057005b6c0300000001000000020000000685028401600f018054848101818110156128ad5760026020526001603ffd5b86600202740300000001000000020000000600000000000000090154600160a060020a0381167f23b872dd0000000000000000000000000000000000000000000000000000000087523360048801523060248801528760448801526020866064896000855af18015156129255760036020526001603ffd5b86518015156129395760046020526001603ffd5b505050925550505050505050565b60006129516133f2565b836c030000000100000002000000060260090183640100000003026401000000068201018054808452602084f35b612987613411565b61298f6133f2565b60065460048116156129a65760006020526001603ffd5b5084640100000003026000805160206134ea83398151915201846003820101805485810167ffffffffffffffff8111156129e55760016020526001603ffd5b8760020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000865af1801515612a715760026020526001603ffd5b8951801515612a855760036020526001603ffd5b5050509290945550505050505050505050565b612aa06134a9565b6000806000612aad6134c9565b6006546080811615612ac45760006020526001603ffd5b5085516020870194508085019350845160048601955084861115612aed5760016020526001603ffd5b63ffffffff60e060020a820416935083640100000003026000805160206134ea8339815191520154600160a060020a0381168033141515612b335760026020526001603ffd5b505050505b60008060008086881415612b4857005b87519350602088015192506040880151915060608801975086881115612b735760036020526001603ffd5b7fbe6b685e53075dd48bdabc4949b848400d5a7e53705df48e04ace664c3946ad2895263ffffffff60e060020a8504811660208b015267ffffffffffffffff60a060020a860481166040808d01829052908852608060020a870483166060808e01919091526c010000000000000000000000008804841660808e0181905291890191909152604060020a870490921660a08c018190529187019190915280851660c08b015260c060020a8404908116906780000000000000001615612c3e5767ffffffffffffffff19175b60e08a0152608060020a830467ffffffffffffffff8116906780000000000000001615612c715767ffffffffffffffff19175b6101008a0152604060020a830467ffffffffffffffff9081166101208b01528381166101408b015260c060020a8304166101608a0181905260808601526c0100000000000000000000000082046bffffffffffffffffffffffff8116906b8000000000000000000000001615612cf1576bffffffffffffffffffffffff19175b6101808a0181905260a08601526bffffffffffffffffffffffff82166b800000000000000000000000831615612d31576bffffffffffffffffffffffff19175b6101a08a0181905260c0860152506101c088207f190100000000000000000000000000000000000000000000000000000000000089527fe3d3073cc59e3a3126c17585a7e516a048e61a9a1c82144af982d1c194b1871060028a01526022890152604288208751602089015160408a01516041909a01997f0100000000000000000000000000000000000000000000000000000000000000900460ff16898b1115612de15760046020526001603ffd5b604080516000808252602080830180855288905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa158015612e39573d6000803e3d6000fd5b5050604051601f1901518a516c03000000010000000200000006026009018054600160a060020a0390921693509150828114612e7a5760056020526001603ffd5b505050505050856020860151141515612e985760066020526001603ffd5b60008501516c030000000100000002000000060260090186640100000003026401000000068201016060870151602060020a6040890151020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a8204168060808d0151111515612f125760076020526001603ffd5b5067ffffffffffffffff60c060020a840416678000000000000000811615612f405767ffffffffffffffff19175b67ffffffffffffffff608060020a850416678000000000000000811615612f6d5767ffffffffffffffff19175b6bffffffffffffffffffffffff6c010000000000000000000000008404166b800000000000000000000000811615612faf576bffffffffffffffffffffffff19175b60a08e015181810384019350677fffffffffffffff8413677fffffffffffffff1985121715612fe35760086020526001603ffd5b50506bffffffffffffffffffffffff83166b800000000000000000000000811615613018576bffffffffffffffffffffffff19175b60c08e015181810383019250677fffffffffffffff8313677fffffffffffffff198412171561304c5760096020526001603ffd5b5050846fffffffffffffffff00000000000000001667ffffffffffffffff8d16608060020a67ffffffffffffffff84160260c060020a67ffffffffffffffff8616021717178087558b60018801558a600288015550505050505050505050505050612b38565b6130ba613411565b6130c26133f2565b6000805160206134ea8339815191526401000000038702018054600160a060020a0381163381146130f85760016020526001603ffd5b8760038401018054808811156131135760026020526001603ffd5b87810382558960020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818b027fa9059cbb000000000000000000000000000000000000000000000000000000008b528c60048c01528060248c015260208a60448d6000865af180151561319e5760036020526001603ffd5b8a518015156131b25760046020526001603ffd5b5050505050505050505050505050505050565b6131cd613411565b6131d56133f2565b8215156131de57005b6005548086106131f35760016020526001603ffd5b50856c0300000001000000020000000602600901600381015480331415156132205760016020526001603ffd5b86600683010180548681101561323b5760026020526001603ffd5b868103825588600202740300000001000000020000000600000000000000090154600160a060020a0381167fa9059cbb00000000000000000000000000000000000000000000000000000000885289600489015288602489015260208760448a6000855af18015156132b25760026020526001603ffd5b87518015156132c65760036020526001603ffd5b5050505050505050505050505050565b6132de613411565b6004548084106132f35760016020526001603ffd5b5060096c03000000010000000200000006850201805433811461331b5760026020526001603ffd5b600182015480156133315760036020526001603ffd5b617080420185106212750042018611808217156133535760046020526001603ffd5b50506401000000038602830164010000000601858155338552602085018790527f63df31d073674141c50de7dfe71cf27c3e441a7af3004b5e0c53c90f74a0710c604086a15050505050505050565b60006133ac6133f2565b83640100000003026000805160206134ea8339815191520183600382010180548352602083f35b6080604051908101604052806004906020820280388339509192915050565b6020604051908101604052806001906020820280388339509192915050565b6060604051908101604052806003906020820280388339509192915050565b60c0604051908101604052806006906020820280388339509192915050565b60408051808201825290600290829080388339509192915050565b60e0604051908101604052806007906020820280388339509192915050565b61016060405190810160405280600b906020820280388339509192915050565b6101c060405190810160405280600e906020820280388339509192915050565b611c006040519081016040528060e090602082028038833950919291505056fe0000000000000000000000030000000100000002000000060000000200000009a165627a7a723058206335430f3ffb3f6f6ca5232ee56759da1124a0dc2b0bcb71d9f000afe26023130029";
    public static Function user_deposit_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "user_deposit_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_recovery_address_propose(long user_id, String proposed) {
        return new Function(
            "user_recovery_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(proposed)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_propose(BigInteger proposed_locked_features) {
        return new Function(
            "security_propose",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(proposed_locked_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_apply_settlement_groups(String data) {
        return new Function(
            "exchange_apply_settlement_groups",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose(long user_id, String trade_address) {
        return new Function(
            "user_trade_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(trade_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_exchange(String name, String addr) {
        return new Function(
            "add_exchange",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(name)
                , new org.web3j.abi.datatypes.Address(addr)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_market_reset(long user_id, int exchange_id, int quote_asset_id, int base_asset_id) {
        return new Function(
            "user_market_reset",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(quote_asset_id)
                , new org.web3j.abi.datatypes.generated.Uint32(base_asset_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_lock(BigInteger lock_features) {
        return new Function(
            "security_lock",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(lock_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_create() {
        return new Function(
            "user_create",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function creator_propose_recovery(String recovery) {
        return new Function(
            "creator_propose_recovery",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(recovery)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_recovery_address_update(long user_id) {
        return new Function(
            "user_recovery_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_session_balance(long user_id, int exchange_id, int asset_id) {
        return new Function(
            "get_session_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint128>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            )
        );
    }
    public static GetSessionBalanceReturnValue query_get_session_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSessionBalanceReturnValue returnValue = new GetSessionBalanceReturnValue();
        returnValue.total_deposit = (BigInteger) values.get(0).getValue();
        returnValue.unsettled_withdraw_total = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.asset_balance = ((BigInteger) values.get(2).getValue()).longValue();
        return returnValue;
    }
    public static Function exchange_update_owner(int exchange_id, String new_owner) {
        return new Function(
            "exchange_update_owner",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(new_owner)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_transfer_from(String data) {
        return new Function(
            "exchange_transfer_from",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw_address_update(long user_id, String withdraw_address) {
        return new Function(
            "user_withdraw_address_update",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(withdraw_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_count() {
        return new Function(
            "get_exchange_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetExchangeCountReturnValue query_get_exchange_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeCountReturnValue returnValue = new GetExchangeCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function user_trade_address_update(long user_id) {
        return new Function(
            "user_trade_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange(int exchange_id) {
        return new Function(
            "get_exchange",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.Bool>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetExchangeReturnValue query_get_exchange(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeReturnValue returnValue = new GetExchangeReturnValue();
        returnValue.name = (String) values.get(0).getValue();
        returnValue.locked = (Boolean) values.get(1).getValue();
        returnValue.owner = (String) values.get(2).getValue();
        returnValue.recovery_address = (String) values.get(3).getValue();
        returnValue.recovery_address_proposed = (String) values.get(4).getValue();
        return returnValue;
    }
    public static Function security_set_proposed() {
        return new Function(
            "security_set_proposed",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function transfer_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_asset(String symbol, long unit_scale, String contract_address) {
        return new Function(
            "add_asset",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(symbol)
                , new org.web3j.abi.datatypes.generated.Uint64(unit_scale)
                , new org.web3j.abi.datatypes.Address(contract_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_propose_backup(int exchange_id, String backup) {
        return new Function(
            "exchange_propose_backup",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(backup)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_user(long user_id) {
        return new Function(
            "get_user",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetUserReturnValue query_get_user(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUserReturnValue returnValue = new GetUserReturnValue();
        returnValue.trade_address = (String) values.get(0).getValue();
        returnValue.trade_address_proposed = (String) values.get(1).getValue();
        returnValue.trade_address_proposed_unlock_at = (BigInteger) values.get(2).getValue();
        returnValue.withdraw_address = (String) values.get(3).getValue();
        returnValue.recovery_address = (String) values.get(4).getValue();
        returnValue.recovery_address_proposed = (String) values.get(5).getValue();
        return returnValue;
    }
    public static Function transfer_from_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_from_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function creator_update(String new_creator) {
        return new Function(
            "creator_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(new_creator)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose_clear(long user_id) {
        return new Function(
            "user_trade_address_propose_clear",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_asset(int asset_id) {
        return new Function(
            "get_asset",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetAssetReturnValue query_get_asset(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetReturnValue returnValue = new GetAssetReturnValue();
        returnValue.symbol = (String) values.get(0).getValue();
        returnValue.unit_scale = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.contract_address = (String) values.get(2).getValue();
        returnValue.net_deposits = (BigInteger) values.get(3).getValue();
        return returnValue;
    }
    public static Function recover_unsettled_withdraws(String data) {
        return new Function(
            "recover_unsettled_withdraws",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function get_asset_count() {
        return new Function(
            "get_asset_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetAssetCountReturnValue query_get_asset_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetCountReturnValue returnValue = new GetAssetCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function get_creator() {
        return new Function(
            "get_creator",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetCreatorReturnValue query_get_creator(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetCreatorReturnValue returnValue = new GetCreatorReturnValue();
        returnValue.dcn_creator = (String) values.get(0).getValue();
        returnValue.dcn_creator_recovery = (String) values.get(1).getValue();
        returnValue.dcn_creator_recovery_proposed = (String) values.get(2).getValue();
        return returnValue;
    }
    public static Function creator_update_recovery() {
        return new Function(
            "creator_update_recovery",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function get_market_state(long user_id, int exchange_id, int quote_asset_id, int base_asset_id) {
        return new Function(
            "get_market_state",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(quote_asset_id)
                , new org.web3j.abi.datatypes.generated.Uint32(base_asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
            )
        );
    }
    public static GetMarketStateReturnValue query_get_market_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetMarketStateReturnValue returnValue = new GetMarketStateReturnValue();
        returnValue.quote_qty = ((BigInteger) values.get(0).getValue()).longValue();
        returnValue.base_qty = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.fee_used = ((BigInteger) values.get(2).getValue()).longValue();
        returnValue.fee_limit = ((BigInteger) values.get(3).getValue()).longValue();
        returnValue.min_quote_qty = ((BigInteger) values.get(4).getValue()).longValue();
        returnValue.min_base_qty = ((BigInteger) values.get(5).getValue()).longValue();
        returnValue.long_max_price = ((BigInteger) values.get(6).getValue()).longValue();
        returnValue.short_min_price = ((BigInteger) values.get(7).getValue()).longValue();
        returnValue.limit_version = ((BigInteger) values.get(8).getValue()).longValue();
        returnValue.quote_shift = (BigInteger) values.get(9).getValue();
        returnValue.base_shift = (BigInteger) values.get(10).getValue();
        return returnValue;
    }
    public static Function set_exchange_locked(int exchange_id, boolean locked) {
        return new Function(
            "set_exchange_locked",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Bool(locked)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_backup(int exchange_id) {
        return new Function(
            "exchange_set_backup",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_balance(long user_id, int asset_id) {
        return new Function(
            "get_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetBalanceReturnValue query_get_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetBalanceReturnValue returnValue = new GetBalanceReturnValue();
        returnValue.return_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function get_security_state() {
        return new Function(
            "get_security_state",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetSecurityStateReturnValue query_get_security_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSecurityStateReturnValue returnValue = new GetSecurityStateReturnValue();
        returnValue.locked_features = (BigInteger) values.get(0).getValue();
        returnValue.locked_features_proposed = (BigInteger) values.get(1).getValue();
        returnValue.proposed_unlock_timestamp = (BigInteger) values.get(2).getValue();
        return returnValue;
    }
    public static Function user_deposit(long user_id, int asset_id, BigInteger amount) {
        return new Function(
            "user_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_unlock_at(long user_id, int exchange_id) {
        return new Function(
            "get_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetUnlockAtReturnValue query_get_unlock_at(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUnlockAtReturnValue returnValue = new GetUnlockAtReturnValue();
        returnValue.unlock_at = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function exchange_deposit(int exchange_id, int asset_id, long quantity) {
        return new Function(
            "exchange_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_limits(String data) {
        return new Function(
            "exchange_set_limits",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_withdraw(int exchange_id, int asset_id, String destination, long quantity) {
        return new Function(
            "exchange_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw(long user_id, int asset_id, String destination, BigInteger amount) {
        return new Function(
            "user_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_session_set_unlock_at(long user_id, int exchange_id, BigInteger unlock_at) {
        return new Function(
            "user_session_set_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint256(unlock_at)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_balance(int exchange_id, int asset_id) {
        return new Function(
            "get_exchange_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetExchangeBalanceReturnValue query_get_exchange_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeBalanceReturnValue returnValue = new GetExchangeBalanceReturnValue();
        returnValue.exchange_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static String DeployData() {
        String encodedConstructor = FunctionEncoder.encodeConstructor(
            Collections.emptyList()
        );
        return BINARY + encodedConstructor;
    }
    public static class UserCreated {
        public long user_id;
    }
    public static final Event UserCreated_EVENT = new Event("UserCreated",
        Collections.singletonList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UserCreated_EVENT_HASH = EventEncoder.encode(UserCreated_EVENT);
    public static UserCreated ExtractUserCreated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UserCreated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UserCreated_EVENT, log);
        UserCreated event = new UserCreated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        return event;
    }
    public static class UnlockAtUpdated {
        public long user_id;
        public long exchange_id;
    }
    public static final Event UnlockAtUpdated_EVENT = new Event("UnlockAtUpdated",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UnlockAtUpdated_EVENT_HASH = EventEncoder.encode(UnlockAtUpdated_EVENT);
    public static UnlockAtUpdated ExtractUnlockAtUpdated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UnlockAtUpdated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UnlockAtUpdated_EVENT, log);
        UnlockAtUpdated event = new UnlockAtUpdated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        return event;
    }
    public static class ExchangeDeposit {
        public long user_id;
        public long exchange_id;
        public int asset_id;
    }
    public static final Event ExchangeDeposit_EVENT = new Event("ExchangeDeposit",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
        )
    );
    public static final String ExchangeDeposit_EVENT_HASH = EventEncoder.encode(ExchangeDeposit_EVENT);
    public static ExchangeDeposit ExtractExchangeDeposit(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !ExchangeDeposit_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(ExchangeDeposit_EVENT, log);
        ExchangeDeposit event = new ExchangeDeposit();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        event.asset_id = ((BigInteger) values.getNonIndexedValues().get(2).getValue()).intValue();
        return event;
    }
    public static class GetSessionBalanceReturnValue {
        public BigInteger total_deposit;
        public long unsettled_withdraw_total;
        public long asset_balance;
    }
    public static class GetExchangeCountReturnValue {
        public int count;
    }
    public static class GetExchangeReturnValue {
        public String name;
        public boolean locked;
        public String owner;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetUserReturnValue {
        public String trade_address;
        public String trade_address_proposed;
        public BigInteger trade_address_proposed_unlock_at;
        public String withdraw_address;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetAssetReturnValue {
        public String symbol;
        public long unit_scale;
        public String contract_address;
        public BigInteger net_deposits;
    }
    public static class GetAssetCountReturnValue {
        public int count;
    }
    public static class GetCreatorReturnValue {
        public String dcn_creator;
        public String dcn_creator_recovery;
        public String dcn_creator_recovery_proposed;
    }
    public static class GetMarketStateReturnValue {
        public long quote_qty;
        public long base_qty;
        public long fee_used;
        public long fee_limit;
        public long min_quote_qty;
        public long min_base_qty;
        public long long_max_price;
        public long short_min_price;
        public long limit_version;
        public BigInteger quote_shift;
        public BigInteger base_shift;
    }
    public static class GetBalanceReturnValue {
        public BigInteger return_balance;
    }
    public static class GetSecurityStateReturnValue {
        public BigInteger locked_features;
        public BigInteger locked_features_proposed;
        public BigInteger proposed_unlock_timestamp;
    }
    public static class GetUnlockAtReturnValue {
        public BigInteger unlock_at;
    }
    public static class GetExchangeBalanceReturnValue {
        public BigInteger exchange_balance;
    }
}
