package io.merklex.dcn.contracts;

import org.web3j.abi.*;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.*;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameterName;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.tx.Contract;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.utils.Numeric;

@javax.annotation.Generated(value="merklex-code-gen")
public class DCN {
    public static final String BINARY = "608060405234801561001057600080fd5b5033600055336001556131bb806100286000396000f3fe608060405234801561001057600080fd5b50600436106102625760003560e060020a90048063972bbb951161014a578063b6fc6860116100c7578063d529cbf61161008b578063d529cbf614610cd0578063d87b665914610d03578063ec3b84f014610d41578063f03f1e0014610de6578063f0b97ebe14610e33578063f54f3fcf14610e7b57610262565b8063b6fc686014610bd8578063c9de7c0814610c03578063cb8dbe6a14610c26578063cd34732914610c6b578063d265ef4814610c9757610262565b8063a88d19021161010e578063a88d190214610a8b578063ace1ed0714610a93578063ad96f04b14610acc578063b1827b5014610ad4578063b69da03014610b9f57610262565b8063972bbb95146108cc578063a0b4244b14610936578063a1c4d5691461097b578063a2157ef4146109a1578063a68c68b4146109c857610262565b806336384331116101e3578063541694cf116101a7578063541694cf1461062657806359adf41f146106eb5780636822e38b146106f35780637c734736146107385780637f62a741146107f5578063828b51e11461089a57610262565b806336384331146105315780633dfecb6f146105635780634283b0dd14610599578063431ec601146105de57806344360c07146105ff57610262565b80632083eda01161022a5780632083eda014610447578063231254451461046457806326db91521461046c57806327be31521461049257806332d184b7146104b957610262565b80630b6e74aa146102675780630ee9117f1461029f57806310271c29146102bc5780631061462c14610361578063136a9bf714610397575b600080fd5b61029d6004803603604081101561027d57600080fd5b50803567ffffffffffffffff169060200135600160a060020a0316610ea6565b005b61029d600480360360208110156102b557600080fd5b5035610eda565b61029d600480360360208110156102d257600080fd5b8101906020810181356401000000008111156102ed57600080fd5b8201836020820111156102ff57600080fd5b8035906020019184600183028401116401000000008311171561032157600080fd5b91908080601f0160208091040260200160405190810160405281815292919060208401838380828437600092019190915250929550610eff945050505050565b61029d6004803603604081101561037757600080fd5b50803567ffffffffffffffff169060200135600160a060020a03166113fd565b61029d600480360360408110156103ad57600080fd5b8101906020810181356401000000008111156103c857600080fd5b8201836020820111156103da57600080fd5b803590602001918460018302840111640100000000831117156103fc57600080fd5b91908080601f016020809104026020016040519081016040528181529291906020840183838082843760009201919091525092955050509035600160a060020a0316915061144d9050565b61029d6004803603602081101561045d57600080fd5b50356114e0565b61029d611509565b61029d6004803603602081101561048257600080fd5b5035600160a060020a03166115a1565b61029d600480360360208110156104a857600080fd5b503567ffffffffffffffff166115bc565b6104f4600480360360608110156104cf57600080fd5b5067ffffffffffffffff8135169063ffffffff602082013581169160400135166115f8565b60405177ffffffffffffffffffffffffffffffffffffffffffffffff909216825267ffffffffffffffff1660208201526040908101905180910390f35b61029d6004803603604081101561054757600080fd5b50803563ffffffff169060200135600160a060020a031661165f565b61029d6004803603604081101561057957600080fd5b50803567ffffffffffffffff169060200135600160a060020a03166116cb565b61029d600480360360808110156105af57600080fd5b5067ffffffffffffffff813581169163ffffffff602082013581169260408301359091169160600135166116ff565b6105e66118ca565b60405163ffffffff909116815260200160405180910390f35b61029d6004803603602081101561061557600080fd5b503567ffffffffffffffff166118de565b6106496004803603602081101561063c57600080fd5b503563ffffffff16611930565b6040518415156020820152600160a060020a03808516604083015283811660608301528216608082015260a08082528190810187818151815260200191508051906020019080838360005b838110156106ac578082015183820152602001610694565b50505050905090810190601f1680156106d95780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61029d6119a4565b61029d6004803603608081101561070957600080fd5b5067ffffffffffffffff813581169163ffffffff602082013581169260408301359091169160600135166119d9565b61029d6004803603606081101561074e57600080fd5b81019060208101813564010000000081111561076957600080fd5b82018360208201111561077b57600080fd5b8035906020019184600183028401116401000000008311171561079d57600080fd5b91908080601f01602080910402602001604051908101604052818152929190602084018383808284376000920191909152509295505050813567ffffffffffffffff1692505060200135600160a060020a0316611b60565b61029d6004803603602081101561080b57600080fd5b81019060208101813564010000000081111561082657600080fd5b82018360208201111561083857600080fd5b8035906020019184600183028401116401000000008311171561085a57600080fd5b91908080601f0160208091040260200160405190810160405281815292919060208401838380828437600092019190915250929550611c1c945050505050565b61029d600480360360408110156108b057600080fd5b50803563ffffffff169060200135600160a060020a0316611eca565b6108f3600480360360208110156108e257600080fd5b503567ffffffffffffffff16611f1c565b604051600160a060020a039687168152948616602086015260408086019490945291851660608501528416608084015290921660a082015260c001905180910390f35b61029d6004803603608081101561094c57600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516611f7e565b61029d6004803603602081101561099157600080fd5b5035600160a060020a03166120d1565b61029d600480360360208110156109b757600080fd5b503567ffffffffffffffff166120ec565b6109eb600480360360208110156109de57600080fd5b503563ffffffff1661212b565b60405167ffffffffffffffff84166020820152600160a060020a03831660408201526060810182905260808082528190810186818151815260200191508051906020019080838360005b83811015610a4d578082015183820152602001610a35565b50505050905090810190601f168015610a7a5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6105e6612193565b610a9b6121a7565b604051600160a060020a03938416815291831660208301529091166040808301919091526060909101905180910390f35b61029d6121ce565b610b1960048036036080811015610aea57600080fd5b5067ffffffffffffffff8135169063ffffffff60208201358116916040810135821691606090910135166121f4565b60405160079b8c0b8c0b8152998b0b8b0b60208b015267ffffffffffffffff9889166040808c019190915297891660608b0152958a0b8a0b60808a015293890b90980b60a088015290851660c0870152841660e086015294909216610100840152600b93840b840b61012084015290830b90920b61014082015261016001905180910390f35b61029d60048036036060811015610bb557600080fd5b5067ffffffffffffffff8135169063ffffffff6020820135169060400135612417565b61029d60048036036040811015610bee57600080fd5b5063ffffffff813516906020013515156124e3565b61029d60048036036020811015610c1957600080fd5b503563ffffffff1661253c565b610c5960048036036040811015610c3c57600080fd5b50803567ffffffffffffffff16906020013563ffffffff16612594565b60405190815260200160405180910390f35b610c736125c0565b60405180848152602001838152602001828152602001935050505060405180910390f35b61029d60048036036060811015610cad57600080fd5b5067ffffffffffffffff8135169063ffffffff60208201351690604001356125e7565b610c5960048036036040811015610ce657600080fd5b50803567ffffffffffffffff16906020013563ffffffff166126f5565b61029d60048036036060811015610d1957600080fd5b50803563ffffffff908116916020810135909116906040013567ffffffffffffffff1661272d565b61029d60048036036020811015610d5757600080fd5b810190602081018135640100000000811115610d7257600080fd5b820183602082011115610d8457600080fd5b80359060200191846001830284011164010000000083111715610da657600080fd5b91908080601f0160208091040260200160405190810160405281815292919060208401838380828437600092019190915250929550612846945050505050565b61029d60048036036080811015610dfc57600080fd5b50803563ffffffff908116916020810135909116906040810135600160a060020a0316906060013567ffffffffffffffff16612e16565b61029d60048036036080811015610e4957600080fd5b5067ffffffffffffffff8135169063ffffffff60208201351690600160a060020a036040820135169060600135612f29565b610c5960048036036040811015610e9157600080fd5b5063ffffffff8135811691602001351661303a565b816c030000000100000002000000060260090160048101548033141515610ed25760016020526001603ffd5b506005015550565b600054338114610eef5760016020526001603ffd5b5060075481811880602052602080fd5b610f0761306b565b600654610100811615610f1f5760006020526001603ffd5b50815160208301818101815160048301925081831115610f445760016020526001603ffd5b60045460e060020a820463ffffffff1690808210610f675760026020526001603ffd5b50600080516020613170833981519152640100000003820201805433600160a060020a03821614610f9d5760036020526001603ffd5b50505b828410156113f457835160098501945083851115610fc35760046020526001603ffd5b63ffffffff60e060020a82041663ffffffff60c060020a830416602060ff7701000000000000000000000000000000000000000000000085041602870160055480831081851016151561101b5760056020526001603ffd5b508681111561102f5760066020526001603ffd5b60008086640100000003026000805160206131708339815191520185600382010180545b858d10156113d2578c5167ffffffffffffffff60c060020a8204166c03000000010000000200000006026009018b6401000000030264010000000682010189602060020a8c020160030264010000000182010167ffffffffffffffff608060020a8504166780000000000000008116156110d35767ffffffffffffffff19175b67ffffffffffffffff680100000000000000008604166780000000000000008116156111055767ffffffffffffffff19175b818b019a50808a01995067ffffffffffffffff86168088019750835467ffffffffffffffff60c060020a82041667800000000000000081161561114e5767ffffffffffffffff19175b67ffffffffffffffff608060020a83041667800000000000000081161561117b5767ffffffffffffffff19175b85820191508481019050677fffffffffffffff8113677fffffffffffffff19821217677fffffffffffffff8313677fffffffffffffff1984121717156111c65760076020526001603ffd5b8367ffffffffffffffff680100000000000000008504160167ffffffffffffffff8416808211156111fc5760086020526001603ffd5b80680100000000000000008302608060020a850260c060020a87021717179450600189015467ffffffffffffffff60c060020a82041667800000000000000081161561124e5767ffffffffffffffff19175b67ffffffffffffffff608060020a83041667800000000000000081161561127b5767ffffffffffffffff19175b80861282881217156112925760086020526001603ffd5b505060026001851202600186120180600381146112be57600181146112d657600281146113125761133f565b858717156112d15760096020526001603ffd5b61133f565b856305f5e10088600003020467ffffffffffffffff680100000000000000008504168082111561130b57600a6020526001603ffd5b505061133f565b856000036305f5e10088020467ffffffffffffffff84168082101561133c57600b6020526001603ffd5b50505b505050505050508f60018701018f60018801018154815467ffffffffffffffff8216888101905067ffffffffffffffff81111561138157600c6020526001603ffd5b67ffffffffffffffff8281168901908111156113a257600d6020526001603ffd5b9590995567ffffffffffffffff1991821690981790925595161790935550505060209f909f019e50611053915050565b838517156113e557600e6020526001603ffd5b905550610fa095505050505050565b50505050505050565b816c0300000001000000020000000602600901600481015480331415156114295760016020526001603ffd5b8260018301556002820180548015156114455742621291200182555b505050505050565b60065460028116156114645760006020526001603ffd5b5060005433811461147a5760016020526001603ffd5b508151600b81146114905760026020526001603ffd5b6004546801000000000000000081106114ae5760046020526001603ffd5b806401000000030260008051602061317083398151915201602085015184178155600201929092555060010160045550565b6000543381146114f55760016020526001603ffd5b506006548181176006556000196007555050565b611511613087565b6006546110008116156115295760006020526001603ffd5b506003546801000000000000000081106115485760016020526001603ffd5b60018101600355806c03000000010000000200000006026009013360008201553360038201553360048201558183527f654a5f371dd267582fdba132709448f256a549360e2ce54ccb3699d3b8ed2394602084a1505050565b6001543381146115b65760016020526001603ffd5b50600255565b806c030000000100000002000000060260090160058101805480331415156115e95760016020526001603ffd5b60009091556004919091015550565b600080611603613087565b856c0300000001000000020000000602600901856401000000030264010000000682010185600182010180546fffffffffffffffffffffffffffffffff608060020a820416855267ffffffffffffffff81166020860152604085f35b6006546102008116156116775760006020526001603ffd5b50816401000000030260008051602061317083398151915201600181015433811415156116a95760016020526001603ffd5b50805473ffffffffffffffffffffffffffffffffffffffff1916909117905550565b816c0300000001000000020000000602600901600481015480331415156116f75760016020526001603ffd5b506003015550565b6117076130a5565b61170f6130c1565b6117176130dd565b600654602081161561172e5760006020526001603ffd5b506004548087106117445760016020526001603ffd5b5060055480861061175a5760026020526001603ffd5b5083151561176457005b6c030000000100000002000000068702640100000003870201850164010000001001805467ffffffffffffffff8082168701908111156117a95760036020526001603ffd5b87600202740300000001000000020000000600000000000000090154600160a060020a03811667ffffffffffffffff60a060020a830416808a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000875af18015156118355760046020526001603ffd5b89518015156118495760056020526001603ffd5b50508a6fffffffffffffffffffffffffffffffff608060020a8804160185608060020a820217876fffffffffffffffff0000000000000000161788558e89528d60208a01528c60408a01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608aa1505050505050505050505050505050565b60006118d46130c1565b6004548152602081f35b806c030000000100000002000000060260090160018101600282018154803314151561190f5760016020526001603ffd5b428211156119225760026020526001603ffd5b600092839055919055905550565b60606000806000806119406130f9565b86640100000003026000805160206131708339815191520180546001820154600283015460c08552600c60c08601528260e086015260ff60a060020a8404166020860152600160a060020a038316604086015281606086015280608086015260cc85f35b6000543381146119b95760016020526001603ffd5b50600854428110156119d05760026020526001603ffd5b60075460065550565b6119e16130a5565b8115156119ea57005b6006546010811615611a015760006020526001603ffd5b50600454808510611a175760016020526001603ffd5b50600554808410611a2d5760026020526001603ffd5b5082600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808402876c030000000100000002000000060260090160038101548033141515611a8a5760036020526001603ffd5b50866006820101805483811015611aa65760046020526001603ffd5b6401000000038a028301890164010000000701805467ffffffffffffffff8082168b0190811115611adc5760056020526001603ffd5b8a6fffffffffffffffffffffffffffffffff608060020a84041601878503865581608060020a820217836fffffffffffffffff0000000000000000161784558e8b528d60208c01528c60408c01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608ca1505050505050505050505050505050565b6006546001811615611b775760006020526001603ffd5b50600054338114611b8d5760016020526001603ffd5b506005546401000000008110611ba85760026020526001603ffd5b835160048114611bbd5760036020526001603ffd5b831515611bcf5760046020526001603ffd5b821515611be15760056020526001603ffd5b602085015160a060020a9490940290921792909217740300000001000000020000000600000000000000096002840201555060010160055550565b6006546040811615611c335760006020526001603ffd5b50805160208201818101815160048301925081831115611c585760016020526001603ffd5b60045460e060020a820463ffffffff1690808210611c7b5760026020526001603ffd5b506000805160206131708339815191526401000000038202015433600160a060020a03821614611cb05760036020526001603ffd5b506005545b838510156113f457845160068601955084861115611cd85760046020526001603ffd5b60e060020a810463ffffffff16828110611cf75760056020526001603ffd5b60ff7b0100000000000000000000000000000000000000000000000000000083041615601060ff7a01000000000000000000000000000000000000000000000000000085041602880187811115611d535760066020526001603ffd5b640100000003860283017403000000010000000200000006000000020000000c0180547403000000010000000200000006000000000000000960028602015460a060020a900467ffffffffffffffff165b838c1015611ebd578b5167ffffffffffffffff60c060020a8204166c030000000100000002000000060260090167ffffffffffffffff608060020a83041660008960018e640100000003026401000000068601010101805467ffffffffffffffff811684810381811115611e44578c15611e235760076020526001603ffd5b508085039350600089851115611e3e5760086020526001603ffd5b848a0399505b8886028e6006890101805482810180821115611e655760096020526001603ffd5b8867ffffffffffffffff68010000000000000000890416018568010000000000000000820217886fffffffffffffffffffffffffffffffff19161789558184555050505050505050505050505060108c019b50611da4565b50905550611cb592505050565b600654610400811615611ee25760006020526001603ffd5b5081640100000003026000805160206131708339815191520160018101543381141515611f145760016020526001603ffd5b506002015550565b600080600080600080611f2d61306b565b876c03000000010000000200000006026009016000810154825260018101546020830152600281015460408301526003810154606083015260048101546080830152600581015460a083015260c082f35b611f866130a5565b811515611f8f57005b600454808510611fa45760016020526001603ffd5b50600554808410611fba5760026020526001603ffd5b5060096c030000000100000002000000068602018054338114611fe25760036020526001603ffd5b5084640100000003026401000000068201018054804281111561200a5760046020526001603ffd5b5050846001820101805467ffffffffffffffff8116808711156120325760056020526001603ffd5b86810367ffffffffffffffff680100000000000000008404168082101561205e5760056020526001603ffd5b818467ffffffffffffffff191617855589600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808b028c60068b01018054828101818110156120bc5760066020526001603ffd5b90915550505050505050505050505050505050565b6001543381146120e65760016020526001603ffd5b50600055565b806c0300000001000000020000000602600901600481015480331415156121185760016020526001603ffd5b6000600183015560006002830155505050565b6060600080600061213a61306b565b740300000001000000020000000600000000000000096002870201805460608084526080840182905260a060020a820467ffffffffffffffff166020850152600160a060020a038216604085015283018190528060a484f35b600061219d6130c1565b6005548152602081f35b60008060006121b46130dd565b600054815260015460208201526002546040820152606081f35b60025433153382141517156121e85760016020526001603ffd5b33600155600060025550565b600080600080600080600080600080600061220d613115565b8c91508d92508f6c03000000010000000200000006026009018f6401000000030264010000000682010184602060020a85020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a8404166780000000000000008116156122855767ffffffffffffffff19175b8752608060020a830467ffffffffffffffff81169067800000000000000016156122b55767ffffffffffffffff19175b8060208901525067ffffffffffffffff68010000000000000000840416604088015267ffffffffffffffff8316606088015267ffffffffffffffff60c060020a8304166780000000000000008116156123145767ffffffffffffffff19175b6080880152608060020a820467ffffffffffffffff81169067800000000000000016156123475767ffffffffffffffff19175b8060a08901525067ffffffffffffffff6801000000000000000083041660c088015267ffffffffffffffff821660e088015267ffffffffffffffff60c060020a8204166101008801526bffffffffffffffffffffffff6c010000000000000000000000008204166b8000000000000000000000008116156123d2576bffffffffffffffffffffffff19175b6101208801526bffffffffffffffffffffffff81166b80000000000000000000000082161561240b576bffffffffffffffffffffffff19175b61014088015261016087f35b61241f6130dd565b6004548084106124345760016020526001603ffd5b5060096c03000000010000000200000006850201805433811461245c5760026020526001603ffd5b600182015480156124725760036020526001603ffd5b617080420185106212750042018611808217156124945760046020526001603ffd5b50506401000000038602830164010000000601858155338552602085018790527f63df31d073674141c50de7dfe71cf27c3e441a7af3004b5e0c53c90f74a0710c604086a15050505050505050565b6000543381146124f85760016020526001603ffd5b50816401000000030260008051602061317083398151915201805460a060020a83028174ff0000000000000000000000000000000000000000191617825550505050565b6006546108008116156125545760006020526001603ffd5b50806401000000030260008051602061317083398151915201600281015433153382141517156125895760016020526001603ffd5b336001830155505050565b600061259e6130c1565b836c030000000100000002000000060260090183600682010180548352602083f35b60008060006125cd6130dd565b600654815260075460208201526008546040820152606081f35b6125ef6130a5565b6125f76130c1565b600654600881161561260e5760006020526001603ffd5b506005548085106126245760016020526001603ffd5b5082151561262e57005b6c0300000001000000020000000685028401600f0180548481018181101561265b5760026020526001603ffd5b86600202740300000001000000020000000600000000000000090154600160a060020a0381167f23b872dd0000000000000000000000000000000000000000000000000000000087523360048801523060248801528760448801526020866064896000855af18015156126d35760036020526001603ffd5b86518015156126e75760046020526001603ffd5b505050925550505050505050565b60006126ff6130c1565b836c030000000100000002000000060260090183640100000003026401000000068201018054808452602084f35b6127356130dd565b61273d6130c1565b60065460048116156127545760006020526001603ffd5b50846401000000030260008051602061317083398151915201846003820101805485810167ffffffffffffffff8111156127935760016020526001603ffd5b8760020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000865af180151561281f5760026020526001603ffd5b89518015156128335760036020526001603ffd5b5050509290945550505050505050505050565b61284e613133565b612856613151565b600080600060065460808116156128725760006020526001603ffd5b508551602087019350808401925083516004850194508385111561289b5760016020526001603ffd5b63ffffffff60e060020a820416925082640100000003026000805160206131708339815191520154600160a060020a03811680331415156128e15760026020526001603ffd5b505050505b600080600080858714156128f657005b865193506020870151925060408701519150606087019650858711156129215760036020526001603ffd5b7fe0bfc2789e007df269c9fec46d3ddd4acf88fdf0f76af154da933aab7fb2f2b9895260e060020a840463ffffffff1660208a015260a060020a840467ffffffffffffffff1660408a018190528060e05903525063ffffffff608060020a8504811660608b01526c0100000000000000000000000085041660808a018190528060a059035263ffffffff6801000000000000000086041690508060a08b01528060805903525067ffffffffffffffff84811660c08b015260c060020a84049081169067800000000000000016156129fe5767ffffffffffffffff19175b60e08a0152608060020a830467ffffffffffffffff8116906780000000000000001615612a315767ffffffffffffffff19175b6101008a015267ffffffffffffffff68010000000000000000840481166101208b01528084166101408b015260c060020a8304166101608a018190528060605903526bffffffffffffffffffffffff6c0100000000000000000000000084041690506b800000000000000000000000811615612ab7576bffffffffffffffffffffffff19175b806101808b0152806040590352506bffffffffffffffffffffffff82166b800000000000000000000000831615612af8576bffffffffffffffffffffffff19175b806101a08b0152806020590352506101c089208754602089015460408a015460418b019a939450919290917f0100000000000000000000000000000000000000000000000000000000000000900460ff169089808c1115612b5e5760046020526001603ffd5b5050600060018583868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612bbf573d6000803e3d6000fd5b50505060206040510351600160a060020a0316905060e05903516c03000000010000000200000006026009018054828114612bff5760056020526001603ffd5b5050505050508460c059035114612c1b5760066020526001603ffd5b60e05903516c03000000010000000200000006026009018564010000000302640100000006820101608059035164010000000060a0590351020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a89041680606059035111612c945760076020526001603ffd5b5067ffffffffffffffff60c060020a840416678000000000000000811615612cc25767ffffffffffffffff19175b67ffffffffffffffff608060020a850416678000000000000000811615612cef5767ffffffffffffffff19175b6bffffffffffffffffffffffff6c010000000000000000000000008404166b800000000000000000000000811615612d31576bffffffffffffffffffffffff19175b604059035181810384019350677fffffffffffffff8413677fffffffffffffff1985121715612d655760086020526001603ffd5b50506bffffffffffffffffffffffff83166b800000000000000000000000811615612d9a576bffffffffffffffffffffffff19175b602059035181810384019250677fffffffffffffff8313677fffffffffffffff1984121715612dce5760096020526001603ffd5b5050846fffffffffffffffff0000000000000000168c608060020a830260c060020a85021717178087558b60018801558a6002880155505050505050505050505050506128e6565b612e1e6130dd565b612e266130c1565b6000805160206131708339815191526401000000038702018054600160a060020a038116338114612e5c5760016020526001603ffd5b876003840101805480881115612e775760026020526001603ffd5b87810382558960020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818b027fa9059cbb000000000000000000000000000000000000000000000000000000008b528c60048c01528060248c015260208a60448d6000865af1801515612f025760036020526001603ffd5b8a51801515612f165760046020526001603ffd5b5050505050505050505050505050505050565b612f316130dd565b612f396130c1565b821515612f4257005b600554808610612f575760016020526001603ffd5b50856c030000000100000002000000060260090160038101548033141515612f845760016020526001603ffd5b866006830101805486811015612f9f5760026020526001603ffd5b868103825588600202740300000001000000020000000600000000000000090154600160a060020a0381167fa9059cbb00000000000000000000000000000000000000000000000000000000885289600489015288602489015260208760448a6000855af18015156130165760026020526001603ffd5b875180151561302a5760036020526001603ffd5b5050505050505050505050505050565b60006130446130c1565b83640100000003026000805160206131708339815191520183600382010180548352602083f35b60c060405190810160405260068160c080388339509192915050565b60408051908101604052806002906020820280388339509192915050565b6080604051908101604052600481608080388339509192915050565b6020604051908101604052600181602080388339509192915050565b6060604051908101604052600381606080388339509192915050565b60e060405190810160405260078160e080388339509192915050565b610160604051908101604052600b8161016080388339509192915050565b6101c0604051908101604052600e816101c080388339509192915050565b611c0060405190810160405260e081611c008038833950919291505056fe0000000000000000000000030000000100000002000000060000000200000009a165627a7a72305820dcf7a891dbd57e3baba5f6ff0f9da46c0dd7e780edcca6d6d1c659be0d75aa040029";
    public static Function user_recovery_address_propose(long user_id, String proposed) {
        return new Function(
            "user_recovery_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(proposed)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_propose(BigInteger proposed_locked_features) {
        return new Function(
            "security_propose",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(proposed_locked_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_apply_settlement_groups(String data) {
        return new Function(
            "exchange_apply_settlement_groups",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose(long user_id, String trade_address) {
        return new Function(
            "user_trade_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(trade_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_exchange(String name, String addr) {
        return new Function(
            "add_exchange",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(name)
                , new org.web3j.abi.datatypes.Address(addr)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_lock(BigInteger lock_features) {
        return new Function(
            "security_lock",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(lock_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_create() {
        return new Function(
            "user_create",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function creator_propose_recovery(String recovery) {
        return new Function(
            "creator_propose_recovery",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(recovery)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_recovery_address_update(long user_id) {
        return new Function(
            "user_recovery_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_session_balance(long user_id, int exchange_id, int asset_id) {
        return new Function(
            "get_session_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint192>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            )
        );
    }
    public static GetSessionBalanceReturnValue query_get_session_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSessionBalanceReturnValue returnValue = new GetSessionBalanceReturnValue();
        returnValue.total_deposit = (BigInteger) values.get(0).getValue();
        returnValue.asset_balance = ((BigInteger) values.get(1).getValue()).longValue();
        return returnValue;
    }
    public static Function exchange_update_owner(int exchange_id, String new_owner) {
        return new Function(
            "exchange_update_owner",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(new_owner)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw_address_update(long user_id, String withdraw_address) {
        return new Function(
            "user_withdraw_address_update",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(withdraw_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function deposit_asset_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "deposit_asset_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_count() {
        return new Function(
            "get_exchange_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetExchangeCountReturnValue query_get_exchange_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeCountReturnValue returnValue = new GetExchangeCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function user_trade_address_update(long user_id) {
        return new Function(
            "user_trade_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange(int exchange_id) {
        return new Function(
            "get_exchange",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.Bool>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetExchangeReturnValue query_get_exchange(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeReturnValue returnValue = new GetExchangeReturnValue();
        returnValue.name = (String) values.get(0).getValue();
        returnValue.locked = (Boolean) values.get(1).getValue();
        returnValue.owner = (String) values.get(2).getValue();
        returnValue.recovery_address = (String) values.get(3).getValue();
        returnValue.recovery_address_proposed = (String) values.get(4).getValue();
        return returnValue;
    }
    public static Function security_set_proposed() {
        return new Function(
            "security_set_proposed",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function transfer_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_asset(String symbol, long unit_scale, String contract_address) {
        return new Function(
            "add_asset",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(symbol)
                , new org.web3j.abi.datatypes.generated.Uint64(unit_scale)
                , new org.web3j.abi.datatypes.Address(contract_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_transfer_from_locked(String data) {
        return new Function(
            "exchange_transfer_from_locked",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_propose_backup(int exchange_id, String backup) {
        return new Function(
            "exchange_propose_backup",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(backup)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_user(long user_id) {
        return new Function(
            "get_user",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetUserReturnValue query_get_user(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUserReturnValue returnValue = new GetUserReturnValue();
        returnValue.trade_address = (String) values.get(0).getValue();
        returnValue.trade_address_proposed = (String) values.get(1).getValue();
        returnValue.trade_address_proposed_unlock_at = (BigInteger) values.get(2).getValue();
        returnValue.withdraw_address = (String) values.get(3).getValue();
        returnValue.recovery_address = (String) values.get(4).getValue();
        returnValue.recovery_address_proposed = (String) values.get(5).getValue();
        return returnValue;
    }
    public static Function transfer_from_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_from_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function creator_update(String new_creator) {
        return new Function(
            "creator_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(new_creator)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose_clear(long user_id) {
        return new Function(
            "user_trade_address_propose_clear",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_asset(int asset_id) {
        return new Function(
            "get_asset",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetAssetReturnValue query_get_asset(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetReturnValue returnValue = new GetAssetReturnValue();
        returnValue.symbol = (String) values.get(0).getValue();
        returnValue.unit_scale = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.contract_address = (String) values.get(2).getValue();
        returnValue.net_deposits = (BigInteger) values.get(3).getValue();
        return returnValue;
    }
    public static Function get_asset_count() {
        return new Function(
            "get_asset_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetAssetCountReturnValue query_get_asset_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetCountReturnValue returnValue = new GetAssetCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function get_creator() {
        return new Function(
            "get_creator",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetCreatorReturnValue query_get_creator(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetCreatorReturnValue returnValue = new GetCreatorReturnValue();
        returnValue.dcn_creator = (String) values.get(0).getValue();
        returnValue.dcn_creator_recovery = (String) values.get(1).getValue();
        returnValue.dcn_creator_recovery_proposed = (String) values.get(2).getValue();
        return returnValue;
    }
    public static Function creator_update_recovery() {
        return new Function(
            "creator_update_recovery",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function get_market_state(long user_id, int exchange_id, int quote_asset_id, int base_asset_id) {
        return new Function(
            "get_market_state",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(quote_asset_id)
                , new org.web3j.abi.datatypes.generated.Uint32(base_asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
            )
        );
    }
    public static GetMarketStateReturnValue query_get_market_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetMarketStateReturnValue returnValue = new GetMarketStateReturnValue();
        returnValue.quote_qty = ((BigInteger) values.get(0).getValue()).longValue();
        returnValue.base_qty = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.fee_used = ((BigInteger) values.get(2).getValue()).longValue();
        returnValue.fee_limit = ((BigInteger) values.get(3).getValue()).longValue();
        returnValue.min_quote_qty = ((BigInteger) values.get(4).getValue()).longValue();
        returnValue.min_base_qty = ((BigInteger) values.get(5).getValue()).longValue();
        returnValue.long_max_price = ((BigInteger) values.get(6).getValue()).longValue();
        returnValue.short_min_price = ((BigInteger) values.get(7).getValue()).longValue();
        returnValue.limit_version = ((BigInteger) values.get(8).getValue()).longValue();
        returnValue.quote_shift = (BigInteger) values.get(9).getValue();
        returnValue.base_shift = (BigInteger) values.get(10).getValue();
        return returnValue;
    }
    public static Function user_set_session_unlock_at(long user_id, int exchange_id, BigInteger unlock_at) {
        return new Function(
            "user_set_session_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint256(unlock_at)
            ),
            Collections.emptyList()
        );
    }
    public static Function set_exchange_locked(int exchange_id, boolean locked) {
        return new Function(
            "set_exchange_locked",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Bool(locked)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_backup(int exchange_id) {
        return new Function(
            "exchange_set_backup",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_balance(long user_id, int asset_id) {
        return new Function(
            "get_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetBalanceReturnValue query_get_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetBalanceReturnValue returnValue = new GetBalanceReturnValue();
        returnValue.return_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function get_security_state() {
        return new Function(
            "get_security_state",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetSecurityStateReturnValue query_get_security_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSecurityStateReturnValue returnValue = new GetSecurityStateReturnValue();
        returnValue.locked_features = (BigInteger) values.get(0).getValue();
        returnValue.locked_features_proposed = (BigInteger) values.get(1).getValue();
        returnValue.proposed_unlock_timestamp = (BigInteger) values.get(2).getValue();
        return returnValue;
    }
    public static Function user_deposit(long user_id, int asset_id, BigInteger amount) {
        return new Function(
            "user_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_unlock_at(long user_id, int exchange_id) {
        return new Function(
            "get_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetUnlockAtReturnValue query_get_unlock_at(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUnlockAtReturnValue returnValue = new GetUnlockAtReturnValue();
        returnValue.unlock_at = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function exchange_deposit(int exchange_id, int asset_id, long quantity) {
        return new Function(
            "exchange_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_limits(String data) {
        return new Function(
            "exchange_set_limits",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_withdraw(int exchange_id, int asset_id, String destination, long quantity) {
        return new Function(
            "exchange_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw(long user_id, int asset_id, String destination, BigInteger amount) {
        return new Function(
            "user_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_balance(int exchange_id, int asset_id) {
        return new Function(
            "get_exchange_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetExchangeBalanceReturnValue query_get_exchange_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeBalanceReturnValue returnValue = new GetExchangeBalanceReturnValue();
        returnValue.exchange_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static String DeployData() {
        String encodedConstructor = FunctionEncoder.encodeConstructor(
            Collections.emptyList()
        );
        return BINARY + encodedConstructor;
    }
    public static class UserCreated {
        public long user_id;
    }
    public static final Event UserCreated_EVENT = new Event("UserCreated",
        Collections.singletonList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UserCreated_EVENT_HASH = EventEncoder.encode(UserCreated_EVENT);
    public static UserCreated ExtractUserCreated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UserCreated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UserCreated_EVENT, log);
        UserCreated event = new UserCreated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        return event;
    }
    public static class UnlockAtUpdated {
        public long user_id;
        public long exchange_id;
    }
    public static final Event UnlockAtUpdated_EVENT = new Event("UnlockAtUpdated",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UnlockAtUpdated_EVENT_HASH = EventEncoder.encode(UnlockAtUpdated_EVENT);
    public static UnlockAtUpdated ExtractUnlockAtUpdated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UnlockAtUpdated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UnlockAtUpdated_EVENT, log);
        UnlockAtUpdated event = new UnlockAtUpdated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        return event;
    }
    public static class ExchangeDeposit {
        public long user_id;
        public long exchange_id;
        public int asset_id;
    }
    public static final Event ExchangeDeposit_EVENT = new Event("ExchangeDeposit",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
        )
    );
    public static final String ExchangeDeposit_EVENT_HASH = EventEncoder.encode(ExchangeDeposit_EVENT);
    public static ExchangeDeposit ExtractExchangeDeposit(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !ExchangeDeposit_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(ExchangeDeposit_EVENT, log);
        ExchangeDeposit event = new ExchangeDeposit();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        event.asset_id = ((BigInteger) values.getNonIndexedValues().get(2).getValue()).intValue();
        return event;
    }
    public static class GetSessionBalanceReturnValue {
        public BigInteger total_deposit;
        public long asset_balance;
    }
    public static class GetExchangeCountReturnValue {
        public int count;
    }
    public static class GetExchangeReturnValue {
        public String name;
        public boolean locked;
        public String owner;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetUserReturnValue {
        public String trade_address;
        public String trade_address_proposed;
        public BigInteger trade_address_proposed_unlock_at;
        public String withdraw_address;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetAssetReturnValue {
        public String symbol;
        public long unit_scale;
        public String contract_address;
        public BigInteger net_deposits;
    }
    public static class GetAssetCountReturnValue {
        public int count;
    }
    public static class GetCreatorReturnValue {
        public String dcn_creator;
        public String dcn_creator_recovery;
        public String dcn_creator_recovery_proposed;
    }
    public static class GetMarketStateReturnValue {
        public long quote_qty;
        public long base_qty;
        public long fee_used;
        public long fee_limit;
        public long min_quote_qty;
        public long min_base_qty;
        public long long_max_price;
        public long short_min_price;
        public long limit_version;
        public BigInteger quote_shift;
        public BigInteger base_shift;
    }
    public static class GetBalanceReturnValue {
        public BigInteger return_balance;
    }
    public static class GetSecurityStateReturnValue {
        public BigInteger locked_features;
        public BigInteger locked_features_proposed;
        public BigInteger proposed_unlock_timestamp;
    }
    public static class GetUnlockAtReturnValue {
        public BigInteger unlock_at;
    }
    public static class GetExchangeBalanceReturnValue {
        public BigInteger exchange_balance;
    }
}
