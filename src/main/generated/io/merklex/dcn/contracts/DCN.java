package io.merklex.dcn.contracts;

import org.web3j.abi.*;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.*;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameterName;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.tx.Contract;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.utils.Numeric;

@javax.annotation.Generated(value="merklex-code-gen")
public class DCN {
    public static final String BINARY = "608060405234801561001057600080fd5b503360005533600155613566806100286000396000f3fe608060405234801561001057600080fd5b50600436106102835760003560e060020a90048063972bbb9511610160578063c9de7c08116100d2578063ec3b84f01161008b578063ec3b84f014610e21578063f03f1e0014610ec7578063f0b97ebe14610f14578063f20d139814610f5c578063f54f3fcf14610f95578063fd33482d14610fc057610283565b8063c9de7c0814610ce9578063cb8dbe6a14610d0c578063cd34732914610d51578063d265ef4814610d77578063d529cbf614610db0578063d87b665914610de357610283565b8063a7e5144211610124578063a7e5144214610b0d578063a88d190214610bb3578063ace1ed0714610bbb578063ad96f04b14610bee578063b1827b5014610bf6578063b6fc686014610cbe57610283565b8063972bbb951461093b578063a0b4244b146109a5578063a1c4d569146109ea578063a2157ef414610a10578063a68c68b414610a3757610283565b806332d184b7116101f957806344360c07116101bd57806344360c071461070c578063541694cf1461073357806359adf41f146107fe5780636822e38b146108065780637c7347361461084b578063828b51e11461090957610283565b806332d184b71461056657806336384331146105dd5780633b9a59e81461060f5780633dfecb6f146106b5578063431ec601146106eb57610283565b8063136a9bf71161024b578063136a9bf7146103fe578063204bc60c146104af5780632083eda0146104f4578063231254451461051157806326db91521461051957806327be31521461053f57610283565b8063054060bb146102885780630b6e74aa146102cf5780630ee9117f1461030557806310271c29146103225780631061462c146103c8575b600080fd5b6102cd6004803603608081101561029e57600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516610fc8565b005b6102cd600480360360408110156102e557600080fd5b50803567ffffffffffffffff169060200135600160a060020a0316611193565b6102cd6004803603602081101561031b57600080fd5b50356111c7565b6102cd6004803603602081101561033857600080fd5b81019060208101813564010000000081111561035357600080fd5b82018360208201111561036557600080fd5b8035906020019184600183028401116401000000008311171561038757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506111ff945050505050565b6102cd600480360360408110156103de57600080fd5b50803567ffffffffffffffff169060200135600160a060020a03166116e9565b6102cd6004803603604081101561041457600080fd5b81019060208101813564010000000081111561042f57600080fd5b82018360208201111561044157600080fd5b8035906020019184600183028401116401000000008311171561046357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050509035600160a060020a031691506117399050565b6102cd600480360360808110156104c557600080fd5b5067ffffffffffffffff8135169063ffffffff60208201358116916040810135821691606090910135166117df565b6102cd6004803603602081101561050a57600080fd5b5035611891565b6102cd6118ba565b6102cd6004803603602081101561052f57600080fd5b5035600160a060020a031661194d565b6102cd6004803603602081101561055557600080fd5b503567ffffffffffffffff16611968565b6105a16004803603606081101561057c57600080fd5b5067ffffffffffffffff8135169063ffffffff602082013581169160400135166119a4565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff9283166020850152911682820152519081900360600190f35b6102cd600480360360408110156105f357600080fd5b50803563ffffffff169060200135600160a060020a0316611a23565b6102cd6004803603602081101561062557600080fd5b81019060208101813564010000000081111561064057600080fd5b82018360208201111561065257600080fd5b8035906020019184600183028401116401000000008311171561067457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a8f945050505050565b6102cd600480360360408110156106cb57600080fd5b50803567ffffffffffffffff169060200135600160a060020a0316611d33565b6106f3611d67565b6040805163ffffffff9092168252519081900360200190f35b6102cd6004803603602081101561072257600080fd5b503567ffffffffffffffff16611d7b565b6107566004803603602081101561074957600080fd5b503563ffffffff16611dcd565b60408051851515602080830191909152600160a060020a03808716938301939093528483166060830152918316608082015260a080825287519082015286519091829160c083019189019080838360005b838110156107bf5781810151838201526020016107a7565b50505050905090810190601f1680156107ec5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6102cd611e41565b6102cd6004803603608081101561081c57600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516611e76565b6102cd6004803603606081101561086157600080fd5b81019060208101813564010000000081111561087c57600080fd5b82018360208201111561088e57600080fd5b803590602001918460018302840111640100000000831117156108b057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050813567ffffffffffffffff1692505060200135600160a060020a0316611ffd565b6102cd6004803603604081101561091f57600080fd5b50803563ffffffff169060200135600160a060020a03166120b5565b6109626004803603602081101561095157600080fd5b503567ffffffffffffffff16612107565b60408051600160a060020a03978816815295871660208701528581019490945291851660608501528416608084015290921660a082015290519081900360c00190f35b6102cd600480360360808110156109bb57600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516612169565b6102cd60048036036020811015610a0057600080fd5b5035600160a060020a03166122b7565b6102cd60048036036020811015610a2657600080fd5b503567ffffffffffffffff166122d2565b610a5a60048036036020811015610a4d57600080fd5b503563ffffffff16612311565b60405180806020018567ffffffffffffffff1667ffffffffffffffff16815260200184600160a060020a0316600160a060020a03168152602001838152602001828103825286818151815260200191508051906020019080838360005b83811015610acf578181015183820152602001610ab7565b50505050905090810190601f168015610afc5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6102cd60048036036020811015610b2357600080fd5b810190602081018135640100000000811115610b3e57600080fd5b820183602082011115610b5057600080fd5b80359060200191846001830284011164010000000083111715610b7257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612383945050505050565b6106f36124d8565b610bc36124ec565b60408051600160a060020a039485168152928416602084015292168183015290519081900360600190f35b6102cd612513565b610c3b60048036036080811015610c0c57600080fd5b5067ffffffffffffffff8135169063ffffffff6020820135811691604081013582169160609091013516612539565b6040805160079c8d0b8d0b81529a8c0b8c0b60208c015267ffffffffffffffff998a168b82015297891660608b0152958a0b8a0b60808a015293890b90980b60a088015290851660c0870152841660e086015294909216610100840152600b93840b840b61012084015290830b90920b6101408201529051908190036101600190f35b6102cd60048036036040811015610cd457600080fd5b5063ffffffff81351690602001351515612752565b6102cd60048036036020811015610cff57600080fd5b503563ffffffff166127ab565b610d3f60048036036040811015610d2257600080fd5b50803567ffffffffffffffff16906020013563ffffffff16612803565b60408051918252519081900360200190f35b610d5961282f565b60408051938452602084019290925282820152519081900360600190f35b6102cd60048036036060811015610d8d57600080fd5b5067ffffffffffffffff8135169063ffffffff6020820135169060400135612856565b610d3f60048036036040811015610dc657600080fd5b50803567ffffffffffffffff16906020013563ffffffff16612964565b6102cd60048036036060811015610df957600080fd5b50803563ffffffff908116916020810135909116906040013567ffffffffffffffff1661299c565b6102cd60048036036020811015610e3757600080fd5b810190602081018135640100000000811115610e5257600080fd5b820183602082011115610e6457600080fd5b80359060200191846001830284011164010000000083111715610e8657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612ab5945050505050565b6102cd60048036036080811015610edd57600080fd5b50803563ffffffff908116916020810135909116906040810135600160a060020a0316906060013567ffffffffffffffff166130cf565b6102cd60048036036080811015610f2a57600080fd5b5067ffffffffffffffff8135169063ffffffff60208201351690600160a060020a0360408201351690606001356131e2565b6102cd60048036036060811015610f7257600080fd5b5067ffffffffffffffff8135169063ffffffff60208201351690604001356132f3565b610d3f60048036036040811015610fab57600080fd5b5063ffffffff813581169160200135166133bf565b6106f36133f0565b610fd0613404565b610fd8613423565b610fe0613442565b6006546020811615610ff75760006020526001603ffd5b5060045480871061100d5760016020526001603ffd5b506005548086106110235760026020526001603ffd5b5083151561102d57005b6c030000000100000002000000068702640100000003870201850164010000001001805467ffffffffffffffff8082168701908111156110725760036020526001603ffd5b87600202740300000001000000020000000600000000000000090154600160a060020a03811667ffffffffffffffff60a060020a830416808a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000875af18015156110fe5760046020526001603ffd5b89518015156111125760056020526001603ffd5b50508a6fffffffffffffffffffffffffffffffff608060020a8804160185608060020a820217876fffffffffffffffff0000000000000000161788558e89528d60208a01528c60408a01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608aa1505050505050505050505050505050565b816c0300000001000000020000000602600901600481015480331415156111bf5760016020526001603ffd5b506005015550565b6000543381146111dc5760016020526001603ffd5b506007548181188219811680156111f7576202a30042016008555b505050600755565b611207613461565b60065461010081161561121f5760006020526001603ffd5b508151602083018181018151600483019250818311156112445760016020526001603ffd5b60045460e060020a820463ffffffff16908082106112675760026020526001603ffd5b5060008051602061351b833981519152640100000003820201805433600160a060020a0382161461129d5760036020526001603ffd5b50505b828410156116e0578351600985019450838511156112c35760046020526001603ffd5b63ffffffff60e060020a82041663ffffffff60c060020a830416602060ff7701000000000000000000000000000000000000000000000085041602870160055480831081851016151561131b5760056020526001603ffd5b508681111561132f5760066020526001603ffd5b600080866401000000030260008051602061351b8339815191520185600382010180545b858d10156116be578c5167ffffffffffffffff60c060020a8204166c03000000010000000200000006026009018b6401000000030264010000000682010189602060020a8c020160030264010000000182010167ffffffffffffffff608060020a8504166780000000000000008116156113d35767ffffffffffffffff19175b67ffffffffffffffff604060020a8604166780000000000000008116156114005767ffffffffffffffff19175b818b019a50808a01995067ffffffffffffffff86168088019750835467ffffffffffffffff60c060020a8204166780000000000000008116156114495767ffffffffffffffff19175b67ffffffffffffffff608060020a8304166780000000000000008116156114765767ffffffffffffffff19175b85820191508481019050677fffffffffffffff8113677fffffffffffffff19821217677fffffffffffffff8313677fffffffffffffff1984121717156114c15760076020526001603ffd5b8367ffffffffffffffff604060020a8504160167ffffffffffffffff8416808211156114f25760086020526001603ffd5b80604060020a8302608060020a850260c060020a87021717179450600189015467ffffffffffffffff60c060020a82041667800000000000000081161561153f5767ffffffffffffffff19175b67ffffffffffffffff608060020a83041667800000000000000081161561156c5767ffffffffffffffff19175b80861282881217156115835760096020526001603ffd5b505060026001851202600186120180600381146115af57600181146115c757600281146115fe5761162b565b858717156115c257600a6020526001603ffd5b61162b565b856305f5e10088600003020467ffffffffffffffff604060020a850416808211156115f757600b6020526001603ffd5b505061162b565b856000036305f5e10088020467ffffffffffffffff84168082101561162857600c6020526001603ffd5b50505b505050505050508f60018701018f60018801018154815467ffffffffffffffff8216888101905067ffffffffffffffff81111561166d57600d6020526001603ffd5b67ffffffffffffffff82811689019081111561168e57600e6020526001603ffd5b9590995567ffffffffffffffff1991821690981790925595161790935550505060209f909f019e50611353915050565b838517156116d157600f6020526001603ffd5b9055506112a095505050505050565b50505050505050565b816c0300000001000000020000000602600901600481015480331415156117155760016020526001603ffd5b8260018301556002820180548015156117315742621291200182555b505050505050565b60065460028116156117505760006020526001603ffd5b506000543381146117665760016020526001603ffd5b508151600b811461177c5760026020526001603ffd5b600454604060020a81106117955760046020526001603ffd5b602093909301518217640100000003840260008051602061351b8339815191528101919091557403000000010000000200000006000000020000000a019190915550600101600455565b6004548084106117f45760016020526001603ffd5b5060096c03000000010000000200000006850201805433811461181c5760026020526001603ffd5b64010000000385028201640100000006018054428111156118425760036020526001603ffd5b84602060020a870201600302640100000001830101600081556000600182015560028101805477ffffffffffffffffffffffffffffffffffffffffffffffff1916815550505050505050505050565b6000543381146118a65760016020526001603ffd5b506006548181176006556000196007555050565b6118c2613480565b6006546110008116156118da5760006020526001603ffd5b50600354604060020a81106118f45760016020526001603ffd5b60018101600355806c03000000010000000200000006026009013360008201553360038201553360048201558183527f654a5f371dd267582fdba132709448f256a549360e2ce54ccb3699d3b8ed2394602084a1505050565b6001543381146119625760016020526001603ffd5b50600255565b806c030000000100000002000000060260090160058101805480331415156119955760016020526001603ffd5b60009091556004919091015550565b60008060006119b1613442565b866c0300000001000000020000000602600901866401000000030264010000000682010186600182010180546fffffffffffffffffffffffffffffffff608060020a820416855267ffffffffffffffff604060020a820416602086015267ffffffffffffffff81166040860152606085f35b600654610200811615611a3b5760006020526001603ffd5b50816401000000030260008051602061351b8339815191520160018101543381141515611a6d5760016020526001603ffd5b50805473ffffffffffffffffffffffffffffffffffffffff1916909117905550565b6006546040811615611aa65760006020526001603ffd5b50805160208201818101815160048301925081831115611acb5760016020526001603ffd5b60045460e060020a820463ffffffff1690808210611aee5760026020526001603ffd5b5060008051602061351b8339815191526401000000038202015433600160a060020a03821614611b235760036020526001603ffd5b506005545b838510156116e057845160068601955084861115611b4b5760046020526001603ffd5b60e060020a810463ffffffff16828110611b6a5760056020526001603ffd5b60ff7b0100000000000000000000000000000000000000000000000000000083041615601060ff7a01000000000000000000000000000000000000000000000000000085041602880187811115611bc65760066020526001603ffd5b640100000003860283017403000000010000000200000006000000020000000c0180547403000000010000000200000006000000000000000960028602015460a060020a900467ffffffffffffffff165b838c1015611d26578b5167ffffffffffffffff60c060020a8204166c030000000100000002000000060260090167ffffffffffffffff608060020a83041660008960018e640100000003026401000000068601010101805467ffffffffffffffff811684810381811115611cb7578c15611c965760076020526001603ffd5b508085039350600089851115611cb15760086020526001603ffd5b848a0399505b8886028e6006890101805482810180821115611cd85760096020526001603ffd5b8867ffffffffffffffff604060020a8904160185604060020a820217886fffffffffffffffffffffffffffffffff19161789558184555050505050505050505050505060108c019b50611c17565b50905550611b2892505050565b816c030000000100000002000000060260090160048101548033141515611d5f5760016020526001603ffd5b506003015550565b6000611d71613423565b6004548152602081f35b806c0300000001000000020000000602600901600181016002820181548033141515611dac5760016020526001603ffd5b42821115611dbf5760026020526001603ffd5b600092839055919055905550565b6060600080600080611ddd61349b565b866401000000030260008051602061351b8339815191520180546001820154600283015460a08552600b60a08601528260c086015260ff60a060020a8404166020860152600160a060020a038316604086015281606086015280608086015260cc85f35b600054338114611e565760016020526001603ffd5b5060085442811115611e6d5760026020526001603ffd5b60075460065550565b611e7e613404565b811515611e8757005b6006546010811615611e9e5760006020526001603ffd5b50600454808510611eb45760016020526001603ffd5b50600554808410611eca5760026020526001603ffd5b5082600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808402876c030000000100000002000000060260090160038101548033141515611f275760036020526001603ffd5b50866006820101805483811015611f435760046020526001603ffd5b6401000000038a028301890164010000000701805467ffffffffffffffff8082168b0190811115611f795760056020526001603ffd5b8a6fffffffffffffffffffffffffffffffff608060020a84041601878503865581608060020a820217836fffffffffffffffff0000000000000000161784558e8b528d60208c01528c60408c01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608ca1505050505050505050505050505050565b60065460018116156120145760006020526001603ffd5b5060005433811461202a5760016020526001603ffd5b5060055464010000000081106120455760026020526001603ffd5b83516004811461205a5760036020526001603ffd5b83151561206c5760046020526001603ffd5b82151561207e5760056020526001603ffd5b506020939093015160a060020a92909202171774030000000100000002000000060000000000000009600283020155600101600555565b6006546104008116156120cd5760006020526001603ffd5b50816401000000030260008051602061351b83398151915201600181015433811415156120ff5760016020526001603ffd5b506002015550565b600080600080600080612118613461565b876c03000000010000000200000006026009016000810154825260018101546020830152600281015460408301526003810154606083015260048101546080830152600581015460a083015260c082f35b612171613404565b81151561217a57005b60045480851061218f5760016020526001603ffd5b506005548084106121a55760026020526001603ffd5b5060096c0300000001000000020000000686020180543381146121cd5760036020526001603ffd5b508464010000000302640100000006820101805480428111156121f55760046020526001603ffd5b5050846001820101805467ffffffffffffffff81168087111561221d5760056020526001603ffd5b86810367ffffffffffffffff604060020a840416808210156122445760066020526001603ffd5b818467ffffffffffffffff191617855589600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808b028c60068b01018054828101818110156122a25760076020526001603ffd5b90915550505050505050505050505050505050565b6001543381146122cc5760016020526001603ffd5b50600055565b806c0300000001000000020000000602600901600481015480331415156122fe5760016020526001603ffd5b6000600183015560006002830155505050565b60606000806000612320613461565b8560020274030000000100000002000000060000000000000009018054600182015460808452600460808501528160a085015267ffffffffffffffff60a060020a8304166020850152600160a060020a038216604085015280606085015260a484f35b8051602082018181015b808210156124d257815163ffffffff60e060020a82041663ffffffff60c060020a83041663ffffffff60a060020a84041660088102600c018601858111156123da5760016020526001603ffd5b640100000003840283017403000000010000000200000006000000020000000c018054805b838a10156124b15767ffffffffffffffff60c060020a8b5104168660018964010000000302640100000006846c030000000100000002000000060260090101010101805467ffffffffffffffff811667ffffffffffffffff604060020a830416808281111561246b5750815b80156124a0576fffffffffffffffffffffffffffffffff198416604060020a9282900392830293829003938417178555968701965b50505050505060088a0199506123ff565b818111156124c45760026020526001603ffd5b5090555061238d9350505050565b50505050565b60006124e2613423565b6005548152602081f35b60008060006124f9613442565b600054815260015460208201526002546040820152606081f35b600254331533821415171561252d5760016020526001603ffd5b33600155600060025550565b60008060008060008060008060008060006125526134ba565b8c91508d92508f6c03000000010000000200000006026009018f6401000000030264010000000682010183602060020a86020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a8404166780000000000000008116156125ca5767ffffffffffffffff19175b8752608060020a830467ffffffffffffffff81169067800000000000000016156125fa5767ffffffffffffffff19175b8060208901525067ffffffffffffffff604060020a840416604088015267ffffffffffffffff8316606088015267ffffffffffffffff60c060020a8304166780000000000000008116156126545767ffffffffffffffff19175b6080880152608060020a820467ffffffffffffffff81169067800000000000000016156126875767ffffffffffffffff19175b8060a08901525067ffffffffffffffff604060020a83041660c088015267ffffffffffffffff821660e088015267ffffffffffffffff60c060020a8204166101008801526bffffffffffffffffffffffff6c010000000000000000000000008204166b80000000000000000000000081161561270d576bffffffffffffffffffffffff19175b6101208801526bffffffffffffffffffffffff81166b800000000000000000000000821615612746576bffffffffffffffffffffffff19175b61014088015261016087f35b6000543381146127675760016020526001603ffd5b50816401000000030260008051602061351b83398151915201805460a060020a83028174ff0000000000000000000000000000000000000000191617825550505050565b6006546108008116156127c35760006020526001603ffd5b50806401000000030260008051602061351b83398151915201600281015433153382141517156127f85760016020526001603ffd5b336001830155505050565b600061280d613423565b836c030000000100000002000000060260090183600682010180548352602083f35b600080600061283c613442565b600654815260075460208201526008546040820152606081f35b61285e613404565b612866613423565b600654600881161561287d5760006020526001603ffd5b506005548085106128935760016020526001603ffd5b5082151561289d57005b6c0300000001000000020000000685028401600f018054848101818110156128ca5760026020526001603ffd5b86600202740300000001000000020000000600000000000000090154600160a060020a0381167f23b872dd0000000000000000000000000000000000000000000000000000000087523360048801523060248801528760448801526020866064896000855af18015156129425760036020526001603ffd5b86518015156129565760046020526001603ffd5b505050925550505050505050565b600061296e613423565b836c030000000100000002000000060260090183640100000003026401000000068201018054808452602084f35b6129a4613442565b6129ac613423565b60065460048116156129c35760006020526001603ffd5b50846401000000030260008051602061351b83398151915201846003820101805485810167ffffffffffffffff811115612a025760016020526001603ffd5b8760020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000865af1801515612a8e5760026020526001603ffd5b8951801515612aa25760036020526001603ffd5b5050509290945550505050505050505050565b612abd6134da565b6000806000612aca6134fa565b6006546080811615612ae15760006020526001603ffd5b5085516020870194508085019350845160048601955084861115612b0a5760016020526001603ffd5b63ffffffff60e060020a8204169350836401000000030260008051602061351b8339815191520154600160a060020a0381168033141515612b505760026020526001603ffd5b505050505b60008060008086881415612b6557005b87519350602088015192506040880151915060608801975086881115612b905760036020526001603ffd5b7fbe6b685e53075dd48bdabc4949b848400d5a7e53705df48e04ace664c3946ad2895263ffffffff60e060020a8504811660208b015267ffffffffffffffff60a060020a860481166040808d01829052908852608060020a870483166060808e01919091526c010000000000000000000000008804841660808e0181905291890191909152604060020a870490921660a08c018190529187019190915280851660c08b015260c060020a8404908116906780000000000000001615612c5b5767ffffffffffffffff19175b60e08a0152608060020a830467ffffffffffffffff8116906780000000000000001615612c8e5767ffffffffffffffff19175b6101008a0152604060020a830467ffffffffffffffff9081166101208b01528381166101408b015260c060020a8304166101608a0181905260808601526c0100000000000000000000000082046bffffffffffffffffffffffff8116906b8000000000000000000000001615612d0e576bffffffffffffffffffffffff19175b6101808a0181905260a08601526bffffffffffffffffffffffff82166b800000000000000000000000831615612d4e576bffffffffffffffffffffffff19175b6101a08a0181905260c0860152506101c088207f190100000000000000000000000000000000000000000000000000000000000089527fe3d3073cc59e3a3126c17585a7e516a048e61a9a1c82144af982d1c194b1871060028a01526022890152604288208751602089015160408a01516041909a01997f0100000000000000000000000000000000000000000000000000000000000000900460ff16898b1115612dfe5760046020526001603ffd5b604080516000808252602080830180855288905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa158015612e56573d6000803e3d6000fd5b5050604051601f1901518a516c03000000010000000200000006026009018054600160a060020a0390921693509150828114612e975760056020526001603ffd5b505050505050856020860151141515612eb55760066020526001603ffd5b60008501516c030000000100000002000000060260090186640100000003026401000000068201016060870151602060020a6040890151020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a8204168060808d0151111515612f2f5760076020526001603ffd5b5067ffffffffffffffff60c060020a840416678000000000000000811615612f5d5767ffffffffffffffff19175b67ffffffffffffffff608060020a850416678000000000000000811615612f8a5767ffffffffffffffff19175b6bffffffffffffffffffffffff6c010000000000000000000000008404166b800000000000000000000000811615612fcc576bffffffffffffffffffffffff19175b60a08e015181810384019350677fffffffffffffff8413677fffffffffffffff19851217156130005760086020526001603ffd5b50506bffffffffffffffffffffffff83166b800000000000000000000000811615613035576bffffffffffffffffffffffff19175b60c08e015181810383019250677fffffffffffffff8313677fffffffffffffff19841217156130695760096020526001603ffd5b5050846fffffffffffffffff00000000000000001667ffffffffffffffff8d16608060020a67ffffffffffffffff84160260c060020a67ffffffffffffffff8616021717178087558b60018801558a600288015550505050505050505050505050612b55565b6130d7613442565b6130df613423565b60008051602061351b8339815191526401000000038702018054600160a060020a0381163381146131155760016020526001603ffd5b8760038401018054808811156131305760026020526001603ffd5b87810382558960020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818b027fa9059cbb000000000000000000000000000000000000000000000000000000008b528c60048c01528060248c015260208a60448d6000865af18015156131bb5760036020526001603ffd5b8a518015156131cf5760046020526001603ffd5b5050505050505050505050505050505050565b6131ea613442565b6131f2613423565b8215156131fb57005b6005548086106132105760016020526001603ffd5b50856c03000000010000000200000006026009016003810154803314151561323d5760016020526001603ffd5b8660068301018054868110156132585760026020526001603ffd5b868103825588600202740300000001000000020000000600000000000000090154600160a060020a0381167fa9059cbb00000000000000000000000000000000000000000000000000000000885289600489015288602489015260208760448a6000855af18015156132cf5760026020526001603ffd5b87518015156132e35760036020526001603ffd5b5050505050505050505050505050565b6132fb613442565b6004548084106133105760016020526001603ffd5b5060096c0300000001000000020000000685020180543381146133385760026020526001603ffd5b6001820154801561334e5760036020526001603ffd5b617080420185106212750042018611808217156133705760046020526001603ffd5b50506401000000038602830164010000000601858155338552602085018790527f63df31d073674141c50de7dfe71cf27c3e441a7af3004b5e0c53c90f74a0710c604086a15050505050505050565b60006133c9613423565b836401000000030260008051602061351b8339815191520183600382010180548352602083f35b60006133fa613423565b6003548152602081f35b6080604051908101604052806004906020820280388339509192915050565b6020604051908101604052806001906020820280388339509192915050565b6060604051908101604052806003906020820280388339509192915050565b60c0604051908101604052806006906020820280388339509192915050565b60408051808201825290600290829080388339509192915050565b60e0604051908101604052806007906020820280388339509192915050565b61016060405190810160405280600b906020820280388339509192915050565b6101c060405190810160405280600e906020820280388339509192915050565b611c006040519081016040528060e090602082028038833950919291505056fe0000000000000000000000030000000100000002000000060000000200000009a165627a7a72305820fc56db380e5730125751c11be24f734995cc3d74cc5a8dfe7431f741ec7387ed0029";
    public static Function user_deposit_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "user_deposit_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_recovery_address_propose(long user_id, String proposed) {
        return new Function(
            "user_recovery_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(proposed)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_propose(BigInteger proposed_locked_features) {
        return new Function(
            "security_propose",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(proposed_locked_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_apply_settlement_groups(String data) {
        return new Function(
            "exchange_apply_settlement_groups",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose(long user_id, String trade_address) {
        return new Function(
            "user_trade_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(trade_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_exchange(String name, String addr) {
        return new Function(
            "add_exchange",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(name)
                , new org.web3j.abi.datatypes.Address(addr)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_market_reset(long user_id, int exchange_id, int quote_asset_id, int base_asset_id) {
        return new Function(
            "user_market_reset",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(quote_asset_id)
                , new org.web3j.abi.datatypes.generated.Uint32(base_asset_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_lock(BigInteger lock_features) {
        return new Function(
            "security_lock",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(lock_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_create() {
        return new Function(
            "user_create",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function creator_propose_recovery(String recovery) {
        return new Function(
            "creator_propose_recovery",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(recovery)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_recovery_address_update(long user_id) {
        return new Function(
            "user_recovery_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_session_balance(long user_id, int exchange_id, int asset_id) {
        return new Function(
            "get_session_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint128>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            )
        );
    }
    public static GetSessionBalanceReturnValue query_get_session_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSessionBalanceReturnValue returnValue = new GetSessionBalanceReturnValue();
        returnValue.total_deposit = (BigInteger) values.get(0).getValue();
        returnValue.unsettled_withdraw_total = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.asset_balance = ((BigInteger) values.get(2).getValue()).longValue();
        return returnValue;
    }
    public static Function exchange_update_owner(int exchange_id, String new_owner) {
        return new Function(
            "exchange_update_owner",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(new_owner)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_transfer_from(String data) {
        return new Function(
            "exchange_transfer_from",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw_address_update(long user_id, String withdraw_address) {
        return new Function(
            "user_withdraw_address_update",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(withdraw_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_count() {
        return new Function(
            "get_exchange_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetExchangeCountReturnValue query_get_exchange_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeCountReturnValue returnValue = new GetExchangeCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function user_trade_address_update(long user_id) {
        return new Function(
            "user_trade_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange(int exchange_id) {
        return new Function(
            "get_exchange",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.Bool>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetExchangeReturnValue query_get_exchange(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeReturnValue returnValue = new GetExchangeReturnValue();
        returnValue.name = (String) values.get(0).getValue();
        returnValue.locked = (Boolean) values.get(1).getValue();
        returnValue.owner = (String) values.get(2).getValue();
        returnValue.recovery_address = (String) values.get(3).getValue();
        returnValue.recovery_address_proposed = (String) values.get(4).getValue();
        return returnValue;
    }
    public static Function security_set_proposed() {
        return new Function(
            "security_set_proposed",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function transfer_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_asset(String symbol, long unit_scale, String contract_address) {
        return new Function(
            "add_asset",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(symbol)
                , new org.web3j.abi.datatypes.generated.Uint64(unit_scale)
                , new org.web3j.abi.datatypes.Address(contract_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_propose_backup(int exchange_id, String backup) {
        return new Function(
            "exchange_propose_backup",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(backup)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_user(long user_id) {
        return new Function(
            "get_user",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetUserReturnValue query_get_user(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUserReturnValue returnValue = new GetUserReturnValue();
        returnValue.trade_address = (String) values.get(0).getValue();
        returnValue.trade_address_proposed = (String) values.get(1).getValue();
        returnValue.trade_address_proposed_unlock_at = (BigInteger) values.get(2).getValue();
        returnValue.withdraw_address = (String) values.get(3).getValue();
        returnValue.recovery_address = (String) values.get(4).getValue();
        returnValue.recovery_address_proposed = (String) values.get(5).getValue();
        return returnValue;
    }
    public static Function transfer_from_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_from_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function creator_update(String new_creator) {
        return new Function(
            "creator_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(new_creator)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose_clear(long user_id) {
        return new Function(
            "user_trade_address_propose_clear",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_asset(int asset_id) {
        return new Function(
            "get_asset",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetAssetReturnValue query_get_asset(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetReturnValue returnValue = new GetAssetReturnValue();
        returnValue.symbol = (String) values.get(0).getValue();
        returnValue.unit_scale = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.contract_address = (String) values.get(2).getValue();
        returnValue.net_deposits = (BigInteger) values.get(3).getValue();
        return returnValue;
    }
    public static Function recover_unsettled_withdraws(String data) {
        return new Function(
            "recover_unsettled_withdraws",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function get_asset_count() {
        return new Function(
            "get_asset_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetAssetCountReturnValue query_get_asset_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetCountReturnValue returnValue = new GetAssetCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function get_creator() {
        return new Function(
            "get_creator",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetCreatorReturnValue query_get_creator(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetCreatorReturnValue returnValue = new GetCreatorReturnValue();
        returnValue.dcn_creator = (String) values.get(0).getValue();
        returnValue.dcn_creator_recovery = (String) values.get(1).getValue();
        returnValue.dcn_creator_recovery_proposed = (String) values.get(2).getValue();
        return returnValue;
    }
    public static Function creator_update_recovery() {
        return new Function(
            "creator_update_recovery",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function get_market_state(long user_id, int exchange_id, int quote_asset_id, int base_asset_id) {
        return new Function(
            "get_market_state",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(quote_asset_id)
                , new org.web3j.abi.datatypes.generated.Uint32(base_asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
            )
        );
    }
    public static GetMarketStateReturnValue query_get_market_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetMarketStateReturnValue returnValue = new GetMarketStateReturnValue();
        returnValue.quote_qty = ((BigInteger) values.get(0).getValue()).longValue();
        returnValue.base_qty = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.fee_used = ((BigInteger) values.get(2).getValue()).longValue();
        returnValue.fee_limit = ((BigInteger) values.get(3).getValue()).longValue();
        returnValue.min_quote_qty = ((BigInteger) values.get(4).getValue()).longValue();
        returnValue.min_base_qty = ((BigInteger) values.get(5).getValue()).longValue();
        returnValue.long_max_price = ((BigInteger) values.get(6).getValue()).longValue();
        returnValue.short_min_price = ((BigInteger) values.get(7).getValue()).longValue();
        returnValue.limit_version = ((BigInteger) values.get(8).getValue()).longValue();
        returnValue.quote_shift = (BigInteger) values.get(9).getValue();
        returnValue.base_shift = (BigInteger) values.get(10).getValue();
        return returnValue;
    }
    public static Function set_exchange_locked(int exchange_id, boolean locked) {
        return new Function(
            "set_exchange_locked",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Bool(locked)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_backup(int exchange_id) {
        return new Function(
            "exchange_set_backup",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_balance(long user_id, int asset_id) {
        return new Function(
            "get_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetBalanceReturnValue query_get_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetBalanceReturnValue returnValue = new GetBalanceReturnValue();
        returnValue.return_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function get_security_state() {
        return new Function(
            "get_security_state",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetSecurityStateReturnValue query_get_security_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSecurityStateReturnValue returnValue = new GetSecurityStateReturnValue();
        returnValue.locked_features = (BigInteger) values.get(0).getValue();
        returnValue.locked_features_proposed = (BigInteger) values.get(1).getValue();
        returnValue.proposed_unlock_timestamp = (BigInteger) values.get(2).getValue();
        return returnValue;
    }
    public static Function user_deposit(long user_id, int asset_id, BigInteger amount) {
        return new Function(
            "user_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_unlock_at(long user_id, int exchange_id) {
        return new Function(
            "get_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetUnlockAtReturnValue query_get_unlock_at(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUnlockAtReturnValue returnValue = new GetUnlockAtReturnValue();
        returnValue.unlock_at = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function exchange_deposit(int exchange_id, int asset_id, long quantity) {
        return new Function(
            "exchange_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_limits(String data) {
        return new Function(
            "exchange_set_limits",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_withdraw(int exchange_id, int asset_id, String destination, long quantity) {
        return new Function(
            "exchange_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw(long user_id, int asset_id, String destination, BigInteger amount) {
        return new Function(
            "user_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_session_set_unlock_at(long user_id, int exchange_id, BigInteger unlock_at) {
        return new Function(
            "user_session_set_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint256(unlock_at)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_balance(int exchange_id, int asset_id) {
        return new Function(
            "get_exchange_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetExchangeBalanceReturnValue query_get_exchange_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeBalanceReturnValue returnValue = new GetExchangeBalanceReturnValue();
        returnValue.exchange_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function get_user_count() {
        return new Function(
            "get_user_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetUserCountReturnValue query_get_user_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUserCountReturnValue returnValue = new GetUserCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static String DeployData() {
        String encodedConstructor = FunctionEncoder.encodeConstructor(
            Collections.emptyList()
        );
        return BINARY + encodedConstructor;
    }
    public static class UserCreated {
        public long user_id;
    }
    public static final Event UserCreated_EVENT = new Event("UserCreated",
        Collections.singletonList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UserCreated_EVENT_HASH = EventEncoder.encode(UserCreated_EVENT);
    public static UserCreated ExtractUserCreated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UserCreated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UserCreated_EVENT, log);
        UserCreated event = new UserCreated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        return event;
    }
    public static class UnlockAtUpdated {
        public long user_id;
        public long exchange_id;
    }
    public static final Event UnlockAtUpdated_EVENT = new Event("UnlockAtUpdated",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UnlockAtUpdated_EVENT_HASH = EventEncoder.encode(UnlockAtUpdated_EVENT);
    public static UnlockAtUpdated ExtractUnlockAtUpdated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UnlockAtUpdated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UnlockAtUpdated_EVENT, log);
        UnlockAtUpdated event = new UnlockAtUpdated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        return event;
    }
    public static class ExchangeDeposit {
        public long user_id;
        public long exchange_id;
        public int asset_id;
    }
    public static final Event ExchangeDeposit_EVENT = new Event("ExchangeDeposit",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
        )
    );
    public static final String ExchangeDeposit_EVENT_HASH = EventEncoder.encode(ExchangeDeposit_EVENT);
    public static ExchangeDeposit ExtractExchangeDeposit(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !ExchangeDeposit_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(ExchangeDeposit_EVENT, log);
        ExchangeDeposit event = new ExchangeDeposit();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        event.asset_id = ((BigInteger) values.getNonIndexedValues().get(2).getValue()).intValue();
        return event;
    }
    public static class GetSessionBalanceReturnValue {
        public BigInteger total_deposit;
        public long unsettled_withdraw_total;
        public long asset_balance;
    }
    public static class GetExchangeCountReturnValue {
        public int count;
    }
    public static class GetExchangeReturnValue {
        public String name;
        public boolean locked;
        public String owner;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetUserReturnValue {
        public String trade_address;
        public String trade_address_proposed;
        public BigInteger trade_address_proposed_unlock_at;
        public String withdraw_address;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetAssetReturnValue {
        public String symbol;
        public long unit_scale;
        public String contract_address;
        public BigInteger net_deposits;
    }
    public static class GetAssetCountReturnValue {
        public int count;
    }
    public static class GetCreatorReturnValue {
        public String dcn_creator;
        public String dcn_creator_recovery;
        public String dcn_creator_recovery_proposed;
    }
    public static class GetMarketStateReturnValue {
        public long quote_qty;
        public long base_qty;
        public long fee_used;
        public long fee_limit;
        public long min_quote_qty;
        public long min_base_qty;
        public long long_max_price;
        public long short_min_price;
        public long limit_version;
        public BigInteger quote_shift;
        public BigInteger base_shift;
    }
    public static class GetBalanceReturnValue {
        public BigInteger return_balance;
    }
    public static class GetSecurityStateReturnValue {
        public BigInteger locked_features;
        public BigInteger locked_features_proposed;
        public BigInteger proposed_unlock_timestamp;
    }
    public static class GetUnlockAtReturnValue {
        public BigInteger unlock_at;
    }
    public static class GetExchangeBalanceReturnValue {
        public BigInteger exchange_balance;
    }
    public static class GetUserCountReturnValue {
        public int count;
    }
}
