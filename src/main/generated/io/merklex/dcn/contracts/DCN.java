package io.merklex.dcn.contracts;

import org.web3j.abi.*;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.*;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameterName;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.tx.Contract;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.utils.Numeric;

@javax.annotation.Generated(value="merklex-code-gen")
public class DCN {
    public static final String BINARY = "608060405234801561001057600080fd5b503360005533600155613257806100286000396000f3fe608060405234801561001057600080fd5b50600436106102625760003560e060020a90048063972bbb951161014a578063b6fc6860116100c7578063d529cbf61161008b578063d529cbf614610cdd578063d87b665914610d10578063ec3b84f014610d4e578063f03f1e0014610df4578063f0b97ebe14610e41578063f54f3fcf14610e8957610262565b8063b6fc686014610beb578063c9de7c0814610c16578063cb8dbe6a14610c39578063cd34732914610c7e578063d265ef4814610ca457610262565b8063a88d19021161010e578063a88d190214610aa7578063ace1ed0714610aaf578063ad96f04b14610ae2578063b1827b5014610aea578063b69da03014610bb257610262565b8063972bbb95146108d5578063a0b4244b1461093f578063a1c4d56914610984578063a2157ef4146109aa578063a68c68b4146109d157610262565b806332d184b7116101e357806344360c07116101a757806344360c07146106a6578063541694cf146106cd57806359adf41f146107985780636822e38b146107a05780637c734736146107e5578063828b51e1146108a357610262565b806332d184b71461050057806336384331146105775780633b9a59e8146105a95780633dfecb6f1461064f578063431ec6011461068557610262565b8063136a9bf71161022a578063136a9bf7146103dd5780632083eda01461048e57806323125445146104ab57806326db9152146104b357806327be3152146104d957610262565b8063054060bb146102675780630b6e74aa146102ae5780630ee9117f146102e457806310271c29146103015780631061462c146103a7575b600080fd5b6102ac6004803603608081101561027d57600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516610eb4565b005b6102ac600480360360408110156102c457600080fd5b50803567ffffffffffffffff169060200135600160a060020a031661107f565b6102ac600480360360208110156102fa57600080fd5b50356110b3565b6102ac6004803603602081101561031757600080fd5b81019060208101813564010000000081111561033257600080fd5b82018360208201111561034457600080fd5b8035906020019184600183028401116401000000008311171561036657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506110eb945050505050565b6102ac600480360360408110156103bd57600080fd5b50803567ffffffffffffffff169060200135600160a060020a03166115e9565b6102ac600480360360408110156103f357600080fd5b81019060208101813564010000000081111561040e57600080fd5b82018360208201111561042057600080fd5b8035906020019184600183028401116401000000008311171561044257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050509035600160a060020a031691506116399050565b6102ac600480360360208110156104a457600080fd5b50356116e4565b6102ac61170d565b6102ac600480360360208110156104c957600080fd5b5035600160a060020a03166117a5565b6102ac600480360360208110156104ef57600080fd5b503567ffffffffffffffff166117c0565b61053b6004803603606081101561051657600080fd5b5067ffffffffffffffff8135169063ffffffff602082013581169160400135166117fc565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff9283166020850152911682820152519081900360600190f35b6102ac6004803603604081101561058d57600080fd5b50803563ffffffff169060200135600160a060020a0316611880565b6102ac600480360360208110156105bf57600080fd5b8101906020810181356401000000008111156105da57600080fd5b8201836020820111156105ec57600080fd5b8035906020019184600183028401116401000000008311171561060e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506118ec945050505050565b6102ac6004803603604081101561066557600080fd5b50803567ffffffffffffffff169060200135600160a060020a0316611b9a565b61068d611bce565b6040805163ffffffff9092168252519081900360200190f35b6102ac600480360360208110156106bc57600080fd5b503567ffffffffffffffff16611be2565b6106f0600480360360208110156106e357600080fd5b503563ffffffff16611c34565b60408051851515602080830191909152600160a060020a03808716938301939093528483166060830152918316608082015260a080825287519082015286519091829160c083019189019080838360005b83811015610759578181015183820152602001610741565b50505050905090810190601f1680156107865780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6102ac611ca8565b6102ac600480360360808110156107b657600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516611cdd565b6102ac600480360360608110156107fb57600080fd5b81019060208101813564010000000081111561081657600080fd5b82018360208201111561082857600080fd5b8035906020019184600183028401116401000000008311171561084a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050813567ffffffffffffffff1692505060200135600160a060020a0316611e64565b6102ac600480360360408110156108b957600080fd5b50803563ffffffff169060200135600160a060020a0316611f1c565b6108fc600480360360208110156108eb57600080fd5b503567ffffffffffffffff16611f6e565b60408051600160a060020a03978816815295871660208701528581019490945291851660608501528416608084015290921660a082015290519081900360c00190f35b6102ac6004803603608081101561095557600080fd5b5067ffffffffffffffff813581169163ffffffff60208201358116926040830135909116916060013516611fd0565b6102ac6004803603602081101561099a57600080fd5b5035600160a060020a0316612123565b6102ac600480360360208110156109c057600080fd5b503567ffffffffffffffff1661213e565b6109f4600480360360208110156109e757600080fd5b503563ffffffff1661217d565b60405180806020018567ffffffffffffffff1667ffffffffffffffff16815260200184600160a060020a0316600160a060020a03168152602001838152602001828103825286818151815260200191508051906020019080838360005b83811015610a69578181015183820152602001610a51565b50505050905090810190601f168015610a965780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b61068d6121e5565b610ab76121f9565b60408051600160a060020a039485168152928416602084015292168183015290519081900360600190f35b6102ac612220565b610b2f60048036036080811015610b0057600080fd5b5067ffffffffffffffff8135169063ffffffff6020820135811691604081013582169160609091013516612246565b6040805160079c8d0b8d0b81529a8c0b8c0b60208c015267ffffffffffffffff998a168b82015297891660608b0152958a0b8a0b60808a015293890b90980b60a088015290851660c0870152841660e086015294909216610100840152600b93840b840b61012084015290830b90920b6101408201529051908190036101600190f35b6102ac60048036036060811015610bc857600080fd5b5067ffffffffffffffff8135169063ffffffff6020820135169060400135612469565b6102ac60048036036040811015610c0157600080fd5b5063ffffffff81351690602001351515612535565b6102ac60048036036020811015610c2c57600080fd5b503563ffffffff1661258e565b610c6c60048036036040811015610c4f57600080fd5b50803567ffffffffffffffff16906020013563ffffffff166125e6565b60408051918252519081900360200190f35b610c86612612565b60408051938452602084019290925282820152519081900360600190f35b6102ac60048036036060811015610cba57600080fd5b5067ffffffffffffffff8135169063ffffffff6020820135169060400135612639565b610c6c60048036036040811015610cf357600080fd5b50803567ffffffffffffffff16906020013563ffffffff16612747565b6102ac60048036036060811015610d2657600080fd5b50803563ffffffff908116916020810135909116906040013567ffffffffffffffff1661277f565b6102ac60048036036020811015610d6457600080fd5b810190602081018135640100000000811115610d7f57600080fd5b820183602082011115610d9157600080fd5b80359060200191846001830284011164010000000083111715610db357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612898945050505050565b6102ac60048036036080811015610e0a57600080fd5b50803563ffffffff908116916020810135909116906040810135600160a060020a0316906060013567ffffffffffffffff16612ea0565b6102ac60048036036080811015610e5757600080fd5b5067ffffffffffffffff8135169063ffffffff60208201351690600160a060020a036040820135169060600135612fb3565b610c6c60048036036040811015610e9f57600080fd5b5063ffffffff813581169160200135166130c4565b610ebc6130f5565b610ec4613114565b610ecc613133565b6006546020811615610ee35760006020526001603ffd5b50600454808710610ef95760016020526001603ffd5b50600554808610610f0f5760026020526001603ffd5b50831515610f1957005b6c030000000100000002000000068702640100000003870201850164010000001001805467ffffffffffffffff808216870190811115610f5e5760036020526001603ffd5b87600202740300000001000000020000000600000000000000090154600160a060020a03811667ffffffffffffffff60a060020a830416808a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000875af1801515610fea5760046020526001603ffd5b8951801515610ffe5760056020526001603ffd5b50508a6fffffffffffffffffffffffffffffffff608060020a8804160185608060020a820217876fffffffffffffffff0000000000000000161788558e89528d60208a01528c60408a01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608aa1505050505050505050505050505050565b816c0300000001000000020000000602600901600481015480331415156110ab5760016020526001603ffd5b506005015550565b6000543381146110c85760016020526001603ffd5b506007548181188219811680156110e3576202a30042016008555b505050600755565b6110f3613152565b60065461010081161561110b5760006020526001603ffd5b508151602083018181018151600483019250818311156111305760016020526001603ffd5b60045460e060020a820463ffffffff16908082106111535760026020526001603ffd5b5060008051602061320c833981519152640100000003820201805433600160a060020a038216146111895760036020526001603ffd5b50505b828410156115e0578351600985019450838511156111af5760046020526001603ffd5b63ffffffff60e060020a82041663ffffffff60c060020a830416602060ff770100000000000000000000000000000000000000000000008504160287016005548083108185101615156112075760056020526001603ffd5b508681111561121b5760066020526001603ffd5b600080866401000000030260008051602061320c8339815191520185600382010180545b858d10156115be578c5167ffffffffffffffff60c060020a8204166c03000000010000000200000006026009018b6401000000030264010000000682010189602060020a8c020160030264010000000182010167ffffffffffffffff608060020a8504166780000000000000008116156112bf5767ffffffffffffffff19175b67ffffffffffffffff680100000000000000008604166780000000000000008116156112f15767ffffffffffffffff19175b818b019a50808a01995067ffffffffffffffff86168088019750835467ffffffffffffffff60c060020a82041667800000000000000081161561133a5767ffffffffffffffff19175b67ffffffffffffffff608060020a8304166780000000000000008116156113675767ffffffffffffffff19175b85820191508481019050677fffffffffffffff8113677fffffffffffffff19821217677fffffffffffffff8313677fffffffffffffff1984121717156113b25760076020526001603ffd5b8367ffffffffffffffff680100000000000000008504160167ffffffffffffffff8416808211156113e85760086020526001603ffd5b80680100000000000000008302608060020a850260c060020a87021717179450600189015467ffffffffffffffff60c060020a82041667800000000000000081161561143a5767ffffffffffffffff19175b67ffffffffffffffff608060020a8304166780000000000000008116156114675767ffffffffffffffff19175b808612828812171561147e5760086020526001603ffd5b505060026001851202600186120180600381146114aa57600181146114c257600281146114fe5761152b565b858717156114bd5760096020526001603ffd5b61152b565b856305f5e10088600003020467ffffffffffffffff68010000000000000000850416808211156114f757600a6020526001603ffd5b505061152b565b856000036305f5e10088020467ffffffffffffffff84168082101561152857600b6020526001603ffd5b50505b505050505050508f60018701018f60018801018154815467ffffffffffffffff8216888101905067ffffffffffffffff81111561156d57600c6020526001603ffd5b67ffffffffffffffff82811689019081111561158e57600d6020526001603ffd5b9590995567ffffffffffffffff1991821690981790925595161790935550505060209f909f019e5061123f915050565b838517156115d157600e6020526001603ffd5b90555061118c95505050505050565b50505050505050565b816c0300000001000000020000000602600901600481015480331415156116155760016020526001603ffd5b8260018301556002820180548015156116315742621291200182555b505050505050565b60065460028116156116505760006020526001603ffd5b506000543381146116665760016020526001603ffd5b508151600b811461167c5760026020526001603ffd5b60045468010000000000000000811061169a5760046020526001603ffd5b602093909301518217640100000003840260008051602061320c8339815191528101919091557403000000010000000200000006000000020000000a019190915550600101600455565b6000543381146116f95760016020526001603ffd5b506006548181176006556000196007555050565b611715613171565b60065461100081161561172d5760006020526001603ffd5b5060035468010000000000000000811061174c5760016020526001603ffd5b60018101600355806c03000000010000000200000006026009013360008201553360038201553360048201558183527f654a5f371dd267582fdba132709448f256a549360e2ce54ccb3699d3b8ed2394602084a1505050565b6001543381146117ba5760016020526001603ffd5b50600255565b806c030000000100000002000000060260090160058101805480331415156117ed5760016020526001603ffd5b60009091556004919091015550565b6000806000611809613133565b866c0300000001000000020000000602600901866401000000030264010000000682010186600182010180546fffffffffffffffffffffffffffffffff608060020a820416855267ffffffffffffffff68010000000000000000820416602086015267ffffffffffffffff81166040860152606085f35b6006546102008116156118985760006020526001603ffd5b50816401000000030260008051602061320c83398151915201600181015433811415156118ca5760016020526001603ffd5b50805473ffffffffffffffffffffffffffffffffffffffff1916909117905550565b60065460408116156119035760006020526001603ffd5b508051602082018181018151600483019250818311156119285760016020526001603ffd5b60045460e060020a820463ffffffff169080821061194b5760026020526001603ffd5b5060008051602061320c8339815191526401000000038202015433600160a060020a038216146119805760036020526001603ffd5b506005545b838510156115e0578451600686019550848611156119a85760046020526001603ffd5b60e060020a810463ffffffff168281106119c75760056020526001603ffd5b60ff7b0100000000000000000000000000000000000000000000000000000083041615601060ff7a01000000000000000000000000000000000000000000000000000085041602880187811115611a235760066020526001603ffd5b640100000003860283017403000000010000000200000006000000020000000c0180547403000000010000000200000006000000000000000960028602015460a060020a900467ffffffffffffffff165b838c1015611b8d578b5167ffffffffffffffff60c060020a8204166c030000000100000002000000060260090167ffffffffffffffff608060020a83041660008960018e640100000003026401000000068601010101805467ffffffffffffffff811684810381811115611b14578c15611af35760076020526001603ffd5b508085039350600089851115611b0e5760086020526001603ffd5b848a0399505b8886028e6006890101805482810180821115611b355760096020526001603ffd5b8867ffffffffffffffff68010000000000000000890416018568010000000000000000820217886fffffffffffffffffffffffffffffffff19161789558184555050505050505050505050505060108c019b50611a74565b5090555061198592505050565b816c030000000100000002000000060260090160048101548033141515611bc65760016020526001603ffd5b506003015550565b6000611bd8613114565b6004548152602081f35b806c0300000001000000020000000602600901600181016002820181548033141515611c135760016020526001603ffd5b42821115611c265760026020526001603ffd5b600092839055919055905550565b6060600080600080611c4461318c565b866401000000030260008051602061320c8339815191520180546001820154600283015460a08552600b60a08601528260c086015260ff60a060020a8404166020860152600160a060020a038316604086015281606086015280608086015260cc85f35b600054338114611cbd5760016020526001603ffd5b5060085442811115611cd45760026020526001603ffd5b60075460065550565b611ce56130f5565b811515611cee57005b6006546010811615611d055760006020526001603ffd5b50600454808510611d1b5760016020526001603ffd5b50600554808410611d315760026020526001603ffd5b5082600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808402876c030000000100000002000000060260090160038101548033141515611d8e5760036020526001603ffd5b50866006820101805483811015611daa5760046020526001603ffd5b6401000000038a028301890164010000000701805467ffffffffffffffff8082168b0190811115611de05760056020526001603ffd5b8a6fffffffffffffffffffffffffffffffff608060020a84041601878503865581608060020a820217836fffffffffffffffff0000000000000000161784558e8b528d60208c01528c60408c01527f7a2923ebfa019dc20de0ae2be0c8639b07e068b143e98ed7f7a74dc4d4f5ab4560608ca1505050505050505050505050505050565b6006546001811615611e7b5760006020526001603ffd5b50600054338114611e915760016020526001603ffd5b506005546401000000008110611eac5760026020526001603ffd5b835160048114611ec15760036020526001603ffd5b831515611ed35760046020526001603ffd5b821515611ee55760056020526001603ffd5b506020939093015160a060020a92909202171774030000000100000002000000060000000000000009600283020155600101600555565b600654610400811615611f345760006020526001603ffd5b50816401000000030260008051602061320c8339815191520160018101543381141515611f665760016020526001603ffd5b506002015550565b600080600080600080611f7f613152565b876c03000000010000000200000006026009016000810154825260018101546020830152600281015460408301526003810154606083015260048101546080830152600581015460a083015260c082f35b611fd86130f5565b811515611fe157005b600454808510611ff65760016020526001603ffd5b5060055480841061200c5760026020526001603ffd5b5060096c0300000001000000020000000686020180543381146120345760036020526001603ffd5b5084640100000003026401000000068201018054804281111561205c5760046020526001603ffd5b5050846001820101805467ffffffffffffffff8116808711156120845760056020526001603ffd5b86810367ffffffffffffffff68010000000000000000840416808210156120b05760066020526001603ffd5b818467ffffffffffffffff191617855589600202740300000001000000020000000600000000000000090167ffffffffffffffff60a060020a82540416808b028c60068b010180548281018181101561210e5760076020526001603ffd5b90915550505050505050505050505050505050565b6001543381146121385760016020526001603ffd5b50600055565b806c03000000010000000200000006026009016004810154803314151561216a5760016020526001603ffd5b6000600183015560006002830155505050565b6060600080600061218c613152565b740300000001000000020000000600000000000000096002870201805460608084526080840182905260a060020a820467ffffffffffffffff166020850152600160a060020a038216604085015283018190528060a484f35b60006121ef613114565b6005548152602081f35b6000806000612206613133565b600054815260015460208201526002546040820152606081f35b600254331533821415171561223a5760016020526001603ffd5b33600155600060025550565b600080600080600080600080600080600061225f6131ab565b8c91508d92508f6c03000000010000000200000006026009018f6401000000030264010000000682010183602060020a86020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a8404166780000000000000008116156122d75767ffffffffffffffff19175b8752608060020a830467ffffffffffffffff81169067800000000000000016156123075767ffffffffffffffff19175b8060208901525067ffffffffffffffff68010000000000000000840416604088015267ffffffffffffffff8316606088015267ffffffffffffffff60c060020a8304166780000000000000008116156123665767ffffffffffffffff19175b6080880152608060020a820467ffffffffffffffff81169067800000000000000016156123995767ffffffffffffffff19175b8060a08901525067ffffffffffffffff6801000000000000000083041660c088015267ffffffffffffffff821660e088015267ffffffffffffffff60c060020a8204166101008801526bffffffffffffffffffffffff6c010000000000000000000000008204166b800000000000000000000000811615612424576bffffffffffffffffffffffff19175b6101208801526bffffffffffffffffffffffff81166b80000000000000000000000082161561245d576bffffffffffffffffffffffff19175b61014088015261016087f35b612471613133565b6004548084106124865760016020526001603ffd5b5060096c0300000001000000020000000685020180543381146124ae5760026020526001603ffd5b600182015480156124c45760036020526001603ffd5b617080420185106212750042018611808217156124e65760046020526001603ffd5b50506401000000038602830164010000000601858155338552602085018790527f63df31d073674141c50de7dfe71cf27c3e441a7af3004b5e0c53c90f74a0710c604086a15050505050505050565b60005433811461254a5760016020526001603ffd5b50816401000000030260008051602061320c83398151915201805460a060020a83028174ff0000000000000000000000000000000000000000191617825550505050565b6006546108008116156125a65760006020526001603ffd5b50806401000000030260008051602061320c83398151915201600281015433153382141517156125db5760016020526001603ffd5b336001830155505050565b60006125f0613114565b836c030000000100000002000000060260090183600682010180548352602083f35b600080600061261f613133565b600654815260075460208201526008546040820152606081f35b6126416130f5565b612649613114565b60065460088116156126605760006020526001603ffd5b506005548085106126765760016020526001603ffd5b5082151561268057005b6c0300000001000000020000000685028401600f018054848101818110156126ad5760026020526001603ffd5b86600202740300000001000000020000000600000000000000090154600160a060020a0381167f23b872dd0000000000000000000000000000000000000000000000000000000087523360048801523060248801528760448801526020866064896000855af18015156127255760036020526001603ffd5b86518015156127395760046020526001603ffd5b505050925550505050505050565b6000612751613114565b836c030000000100000002000000060260090183640100000003026401000000068201018054808452602084f35b612787613133565b61278f613114565b60065460048116156127a65760006020526001603ffd5b50846401000000030260008051602061320c83398151915201846003820101805485810167ffffffffffffffff8111156127e55760016020526001603ffd5b8760020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818a027f23b872dd000000000000000000000000000000000000000000000000000000008a523360048b01523060248b01528060448b015260208960648c6000865af18015156128715760026020526001603ffd5b89518015156128855760036020526001603ffd5b5050509290945550505050505050505050565b6128a06131cb565b6128a86131eb565b6000808061032084146128c05760646020526001603ffd5b60065460808116156128d75760006020526001603ffd5b50855160208701935080840192508351600485019450838511156129005760016020526001603ffd5b63ffffffff60e060020a8204169250826401000000030260008051602061320c8339815191520154600160a060020a03811680331415156129465760026020526001603ffd5b505050505b6000806000808587141561295b57005b865193506020870151925060408701519150606087019650858711156129865760036020526001603ffd5b7fbe6b685e53075dd48bdabc4949b848400d5a7e53705df48e04ace664c3946ad2895263ffffffff60e060020a8504811660208b015267ffffffffffffffff60a060020a8604811660408c0181905261032052608060020a8604821660608c01526c010000000000000000000000008604821660808c018190526103605268010000000000000000860490911660a08b018190526103805280851660c08b015260c060020a8404908116906780000000000000001615612a4c5767ffffffffffffffff19175b60e08a0152608060020a830467ffffffffffffffff8116906780000000000000001615612a7f5767ffffffffffffffff19175b6101008a015268010000000000000000830467ffffffffffffffff9081166101208b01528381166101408b015260c060020a8304166101608a018190526103a0526c0100000000000000000000000082046bffffffffffffffffffffffff8116906b8000000000000000000000001615612b03576bffffffffffffffffffffffff19175b6101808a018190526103c0526bffffffffffffffffffffffff82166b800000000000000000000000831615612b42576bffffffffffffffffffffffff19175b6101a08a018190526103e052506101c088207f190100000000000000000000000000000000000000000000000000000000000089527fe3d3073cc59e3a3126c17585a7e516a048e61a9a1c82144af982d1c194b1871060028a01526022890152604288208651602088015160408901516041909901987f0100000000000000000000000000000000000000000000000000000000000000900460ff16888a1115612bf15760046020526001603ffd5b604080516000808252602080830180855288905260ff85168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa158015612c49573d6000803e3d6000fd5b50505060206040510351600160a060020a03169050610320516c030000000100000002000000060260090160008101548083141515612c8d5760056020526001603ffd5b5050505050508461034051141515612caa5760066020526001603ffd5b610320516c0300000001000000020000000602600901856401000000030264010000000682010161038051602060020a61036051020160030264010000000182010180546001820154600283015467ffffffffffffffff60c060020a820416806103a051111515612d205760076020526001603ffd5b5067ffffffffffffffff60c060020a840416678000000000000000811615612d4e5767ffffffffffffffff19175b67ffffffffffffffff608060020a850416678000000000000000811615612d7b5767ffffffffffffffff19175b6bffffffffffffffffffffffff6c010000000000000000000000008404166b800000000000000000000000811615612dbd576bffffffffffffffffffffffff19175b6103c05181810384019350677fffffffffffffff8413677fffffffffffffff1985121715612df05760086020526001603ffd5b50506bffffffffffffffffffffffff83166b800000000000000000000000811615612e25576bffffffffffffffffffffffff19175b6103e05181810384019250677fffffffffffffff8313677fffffffffffffff1984121715612e585760096020526001603ffd5b5050846fffffffffffffffff0000000000000000168c608060020a830260c060020a85021717178087558b60018801558a60028801555050505050505050505050505061294b565b612ea8613133565b612eb0613114565b60008051602061320c8339815191526401000000038702018054600160a060020a038116338114612ee65760016020526001603ffd5b876003840101805480881115612f015760026020526001603ffd5b87810382558960020274030000000100000002000000060000000000000009015467ffffffffffffffff60a060020a820416600160a060020a038216818b027fa9059cbb000000000000000000000000000000000000000000000000000000008b528c60048c01528060248c015260208a60448d6000865af1801515612f8c5760036020526001603ffd5b8a51801515612fa05760046020526001603ffd5b5050505050505050505050505050505050565b612fbb613133565b612fc3613114565b821515612fcc57005b600554808610612fe15760016020526001603ffd5b50856c03000000010000000200000006026009016003810154803314151561300e5760016020526001603ffd5b8660068301018054868110156130295760026020526001603ffd5b868103825588600202740300000001000000020000000600000000000000090154600160a060020a0381167fa9059cbb00000000000000000000000000000000000000000000000000000000885289600489015288602489015260208760448a6000855af18015156130a05760026020526001603ffd5b87518015156130b45760036020526001603ffd5b5050505050505050505050505050565b60006130ce613114565b836401000000030260008051602061320c8339815191520183600382010180548352602083f35b6080604051908101604052806004906020820280388339509192915050565b6020604051908101604052806001906020820280388339509192915050565b6060604051908101604052806003906020820280388339509192915050565b60c0604051908101604052806006906020820280388339509192915050565b60408051808201825290600290829080388339509192915050565b60e0604051908101604052806007906020820280388339509192915050565b61016060405190810160405280600b906020820280388339509192915050565b6101c060405190810160405280600e906020820280388339509192915050565b611c006040519081016040528060e090602082028038833950919291505056fe0000000000000000000000030000000100000002000000060000000200000009a165627a7a72305820bcb72144a90678aa13f470a36af38a339c439c7c292f05f204ea730c8e33242a0029";
    public static Function user_deposit_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "user_deposit_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_recovery_address_propose(long user_id, String proposed) {
        return new Function(
            "user_recovery_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(proposed)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_propose(BigInteger proposed_locked_features) {
        return new Function(
            "security_propose",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(proposed_locked_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_apply_settlement_groups(String data) {
        return new Function(
            "exchange_apply_settlement_groups",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose(long user_id, String trade_address) {
        return new Function(
            "user_trade_address_propose",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(trade_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_exchange(String name, String addr) {
        return new Function(
            "add_exchange",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(name)
                , new org.web3j.abi.datatypes.Address(addr)
            ),
            Collections.emptyList()
        );
    }
    public static Function security_lock(BigInteger lock_features) {
        return new Function(
            "security_lock",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint256(lock_features)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_create() {
        return new Function(
            "user_create",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function creator_propose_recovery(String recovery) {
        return new Function(
            "creator_propose_recovery",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(recovery)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_recovery_address_update(long user_id) {
        return new Function(
            "user_recovery_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_session_balance(long user_id, int exchange_id, int asset_id) {
        return new Function(
            "get_session_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint128>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            )
        );
    }
    public static GetSessionBalanceReturnValue query_get_session_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSessionBalanceReturnValue returnValue = new GetSessionBalanceReturnValue();
        returnValue.total_deposit = (BigInteger) values.get(0).getValue();
        returnValue.unsettled_withdraw_total = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.asset_balance = ((BigInteger) values.get(2).getValue()).longValue();
        return returnValue;
    }
    public static Function exchange_update_owner(int exchange_id, String new_owner) {
        return new Function(
            "exchange_update_owner",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(new_owner)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_transfer_from(String data) {
        return new Function(
            "exchange_transfer_from",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw_address_update(long user_id, String withdraw_address) {
        return new Function(
            "user_withdraw_address_update",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.Address(withdraw_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_count() {
        return new Function(
            "get_exchange_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetExchangeCountReturnValue query_get_exchange_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeCountReturnValue returnValue = new GetExchangeCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function user_trade_address_update(long user_id) {
        return new Function(
            "user_trade_address_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange(int exchange_id) {
        return new Function(
            "get_exchange",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.Bool>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetExchangeReturnValue query_get_exchange(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeReturnValue returnValue = new GetExchangeReturnValue();
        returnValue.name = (String) values.get(0).getValue();
        returnValue.locked = (Boolean) values.get(1).getValue();
        returnValue.owner = (String) values.get(2).getValue();
        returnValue.recovery_address = (String) values.get(3).getValue();
        returnValue.recovery_address_proposed = (String) values.get(4).getValue();
        return returnValue;
    }
    public static Function security_set_proposed() {
        return new Function(
            "security_set_proposed",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function transfer_to_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_to_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function add_asset(String symbol, long unit_scale, String contract_address) {
        return new Function(
            "add_asset",
            Arrays.asList(
                new org.web3j.abi.datatypes.Utf8String(symbol)
                , new org.web3j.abi.datatypes.generated.Uint64(unit_scale)
                , new org.web3j.abi.datatypes.Address(contract_address)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_propose_backup(int exchange_id, String backup) {
        return new Function(
            "exchange_propose_backup",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Address(backup)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_user(long user_id) {
        return new Function(
            "get_user",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetUserReturnValue query_get_user(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUserReturnValue returnValue = new GetUserReturnValue();
        returnValue.trade_address = (String) values.get(0).getValue();
        returnValue.trade_address_proposed = (String) values.get(1).getValue();
        returnValue.trade_address_proposed_unlock_at = (BigInteger) values.get(2).getValue();
        returnValue.withdraw_address = (String) values.get(3).getValue();
        returnValue.recovery_address = (String) values.get(4).getValue();
        returnValue.recovery_address_proposed = (String) values.get(5).getValue();
        return returnValue;
    }
    public static Function transfer_from_session(long user_id, int exchange_id, int asset_id, long quantity) {
        return new Function(
            "transfer_from_session",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function creator_update(String new_creator) {
        return new Function(
            "creator_update",
            Collections.singletonList(
                new org.web3j.abi.datatypes.Address(new_creator)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_trade_address_propose_clear(long user_id) {
        return new Function(
            "user_trade_address_propose_clear",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_asset(int asset_id) {
        return new Function(
            "get_asset",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Utf8String>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetAssetReturnValue query_get_asset(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetReturnValue returnValue = new GetAssetReturnValue();
        returnValue.symbol = (String) values.get(0).getValue();
        returnValue.unit_scale = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.contract_address = (String) values.get(2).getValue();
        returnValue.net_deposits = (BigInteger) values.get(3).getValue();
        return returnValue;
    }
    public static Function get_asset_count() {
        return new Function(
            "get_asset_count",
            Collections.emptyList(),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
            )
        );
    }
    public static GetAssetCountReturnValue query_get_asset_count(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetAssetCountReturnValue returnValue = new GetAssetCountReturnValue();
        returnValue.count = ((BigInteger) values.get(0).getValue()).intValue();
        return returnValue;
    }
    public static Function get_creator() {
        return new Function(
            "get_creator",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
                , new TypeReference<org.web3j.abi.datatypes.Address>() {}
            )
        );
    }
    public static GetCreatorReturnValue query_get_creator(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetCreatorReturnValue returnValue = new GetCreatorReturnValue();
        returnValue.dcn_creator = (String) values.get(0).getValue();
        returnValue.dcn_creator_recovery = (String) values.get(1).getValue();
        returnValue.dcn_creator_recovery_proposed = (String) values.get(2).getValue();
        return returnValue;
    }
    public static Function creator_update_recovery() {
        return new Function(
            "creator_update_recovery",
            Collections.emptyList(),
            Collections.emptyList()
        );
    }
    public static Function get_market_state(long user_id, int exchange_id, int quote_asset_id, int base_asset_id) {
        return new Function(
            "get_market_state",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(quote_asset_id)
                , new org.web3j.abi.datatypes.generated.Uint32(base_asset_id)
            ),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Int96>() {}
            )
        );
    }
    public static GetMarketStateReturnValue query_get_market_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetMarketStateReturnValue returnValue = new GetMarketStateReturnValue();
        returnValue.quote_qty = ((BigInteger) values.get(0).getValue()).longValue();
        returnValue.base_qty = ((BigInteger) values.get(1).getValue()).longValue();
        returnValue.fee_used = ((BigInteger) values.get(2).getValue()).longValue();
        returnValue.fee_limit = ((BigInteger) values.get(3).getValue()).longValue();
        returnValue.min_quote_qty = ((BigInteger) values.get(4).getValue()).longValue();
        returnValue.min_base_qty = ((BigInteger) values.get(5).getValue()).longValue();
        returnValue.long_max_price = ((BigInteger) values.get(6).getValue()).longValue();
        returnValue.short_min_price = ((BigInteger) values.get(7).getValue()).longValue();
        returnValue.limit_version = ((BigInteger) values.get(8).getValue()).longValue();
        returnValue.quote_shift = (BigInteger) values.get(9).getValue();
        returnValue.base_shift = (BigInteger) values.get(10).getValue();
        return returnValue;
    }
    public static Function user_set_session_unlock_at(long user_id, int exchange_id, BigInteger unlock_at) {
        return new Function(
            "user_set_session_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint256(unlock_at)
            ),
            Collections.emptyList()
        );
    }
    public static Function set_exchange_locked(int exchange_id, boolean locked) {
        return new Function(
            "set_exchange_locked",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.Bool(locked)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_backup(int exchange_id) {
        return new Function(
            "exchange_set_backup",
            Collections.singletonList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_balance(long user_id, int asset_id) {
        return new Function(
            "get_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetBalanceReturnValue query_get_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetBalanceReturnValue returnValue = new GetBalanceReturnValue();
        returnValue.return_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function get_security_state() {
        return new Function(
            "get_security_state",
            Collections.emptyList(),
            Arrays.asList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
                , new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetSecurityStateReturnValue query_get_security_state(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetSecurityStateReturnValue returnValue = new GetSecurityStateReturnValue();
        returnValue.locked_features = (BigInteger) values.get(0).getValue();
        returnValue.locked_features_proposed = (BigInteger) values.get(1).getValue();
        returnValue.proposed_unlock_timestamp = (BigInteger) values.get(2).getValue();
        return returnValue;
    }
    public static Function user_deposit(long user_id, int asset_id, BigInteger amount) {
        return new Function(
            "user_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_unlock_at(long user_id, int exchange_id) {
        return new Function(
            "get_unlock_at",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetUnlockAtReturnValue query_get_unlock_at(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetUnlockAtReturnValue returnValue = new GetUnlockAtReturnValue();
        returnValue.unlock_at = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static Function exchange_deposit(int exchange_id, int asset_id, long quantity) {
        return new Function(
            "exchange_deposit",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_set_limits(String data) {
        return new Function(
            "exchange_set_limits",
            Collections.singletonList(
                new org.web3j.abi.datatypes.DynamicBytes(Numeric.hexStringToByteArray(data))
            ),
            Collections.emptyList()
        );
    }
    public static Function exchange_withdraw(int exchange_id, int asset_id, String destination, long quantity) {
        return new Function(
            "exchange_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint64(quantity)
            ),
            Collections.emptyList()
        );
    }
    public static Function user_withdraw(long user_id, int asset_id, String destination, BigInteger amount) {
        return new Function(
            "user_withdraw",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint64(user_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
                , new org.web3j.abi.datatypes.Address(destination)
                , new org.web3j.abi.datatypes.generated.Uint256(amount)
            ),
            Collections.emptyList()
        );
    }
    public static Function get_exchange_balance(int exchange_id, int asset_id) {
        return new Function(
            "get_exchange_balance",
            Arrays.asList(
                new org.web3j.abi.datatypes.generated.Uint32(exchange_id)
                , new org.web3j.abi.datatypes.generated.Uint32(asset_id)
            ),
            Collections.singletonList(
                new TypeReference<org.web3j.abi.datatypes.generated.Uint256>() {}
            )
        );
    }
    public static GetExchangeBalanceReturnValue query_get_exchange_balance(String contractAddress, Web3j web3j, Function function) throws IOException {
        String encodedFunction = FunctionEncoder.encode(function);
        org.web3j.protocol.core.methods.response.EthCall ethCall = web3j.ethCall(
            Transaction.createEthCallTransaction("0x0000000000000000000000000000000000000000", contractAddress, encodedFunction),
            DefaultBlockParameterName.LATEST
        ).send();
        String value = ethCall.getValue();
        List<Type> values = FunctionReturnDecoder.decode(value, function.getOutputParameters());
        GetExchangeBalanceReturnValue returnValue = new GetExchangeBalanceReturnValue();
        returnValue.exchange_balance = (BigInteger) values.get(0).getValue();
        return returnValue;
    }
    public static String DeployData() {
        String encodedConstructor = FunctionEncoder.encodeConstructor(
            Collections.emptyList()
        );
        return BINARY + encodedConstructor;
    }
    public static class UserCreated {
        public long user_id;
    }
    public static final Event UserCreated_EVENT = new Event("UserCreated",
        Collections.singletonList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UserCreated_EVENT_HASH = EventEncoder.encode(UserCreated_EVENT);
    public static UserCreated ExtractUserCreated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UserCreated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UserCreated_EVENT, log);
        UserCreated event = new UserCreated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        return event;
    }
    public static class UnlockAtUpdated {
        public long user_id;
        public long exchange_id;
    }
    public static final Event UnlockAtUpdated_EVENT = new Event("UnlockAtUpdated",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
        )
    );
    public static final String UnlockAtUpdated_EVENT_HASH = EventEncoder.encode(UnlockAtUpdated_EVENT);
    public static UnlockAtUpdated ExtractUnlockAtUpdated(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !UnlockAtUpdated_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(UnlockAtUpdated_EVENT, log);
        UnlockAtUpdated event = new UnlockAtUpdated();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        return event;
    }
    public static class ExchangeDeposit {
        public long user_id;
        public long exchange_id;
        public int asset_id;
    }
    public static final Event ExchangeDeposit_EVENT = new Event("ExchangeDeposit",
        Arrays.asList(
            new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint64>() {}
            , new TypeReference<org.web3j.abi.datatypes.generated.Uint32>() {}
        )
    );
    public static final String ExchangeDeposit_EVENT_HASH = EventEncoder.encode(ExchangeDeposit_EVENT);
    public static ExchangeDeposit ExtractExchangeDeposit(Log log) {
        List<String> topics = log.getTopics();
        if (topics.size() == 0 || !ExchangeDeposit_EVENT_HASH.equals(topics.get(0))) {
            return null;
        }
        EventValues values = Contract.staticExtractEventParameters(ExchangeDeposit_EVENT, log);
        ExchangeDeposit event = new ExchangeDeposit();
        event.user_id = ((BigInteger) values.getNonIndexedValues().get(0).getValue()).longValue();
        event.exchange_id = ((BigInteger) values.getNonIndexedValues().get(1).getValue()).longValue();
        event.asset_id = ((BigInteger) values.getNonIndexedValues().get(2).getValue()).intValue();
        return event;
    }
    public static class GetSessionBalanceReturnValue {
        public BigInteger total_deposit;
        public long unsettled_withdraw_total;
        public long asset_balance;
    }
    public static class GetExchangeCountReturnValue {
        public int count;
    }
    public static class GetExchangeReturnValue {
        public String name;
        public boolean locked;
        public String owner;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetUserReturnValue {
        public String trade_address;
        public String trade_address_proposed;
        public BigInteger trade_address_proposed_unlock_at;
        public String withdraw_address;
        public String recovery_address;
        public String recovery_address_proposed;
    }
    public static class GetAssetReturnValue {
        public String symbol;
        public long unit_scale;
        public String contract_address;
        public BigInteger net_deposits;
    }
    public static class GetAssetCountReturnValue {
        public int count;
    }
    public static class GetCreatorReturnValue {
        public String dcn_creator;
        public String dcn_creator_recovery;
        public String dcn_creator_recovery_proposed;
    }
    public static class GetMarketStateReturnValue {
        public long quote_qty;
        public long base_qty;
        public long fee_used;
        public long fee_limit;
        public long min_quote_qty;
        public long min_base_qty;
        public long long_max_price;
        public long short_min_price;
        public long limit_version;
        public BigInteger quote_shift;
        public BigInteger base_shift;
    }
    public static class GetBalanceReturnValue {
        public BigInteger return_balance;
    }
    public static class GetSecurityStateReturnValue {
        public BigInteger locked_features;
        public BigInteger locked_features_proposed;
        public BigInteger proposed_unlock_timestamp;
    }
    public static class GetUnlockAtReturnValue {
        public BigInteger unlock_at;
    }
    public static class GetExchangeBalanceReturnValue {
        public BigInteger exchange_balance;
    }
}
